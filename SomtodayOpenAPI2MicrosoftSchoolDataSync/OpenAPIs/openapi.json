{
  "openapi": "3.0.3",
  "info": {
    "title": "Somtoday Connect - Generiek Koppelvlak",
    "version": "14.10.0",
    "license": {
      "name": "Connect Api"
    },
    "description": "Dit is de OpenAPI specificatie van het Somtoday Connect Koppelvlak. \n\nChangelog\n--------------\n- [Nightly](https://connect.nightly.somtoday.build/changelog)\n- [Acceptatie](https://connect.acceptatie.somtoday.nl/changelog)\n- [Test](https://connect.test.somtoday.nl/changelog)\n- [Productie](https://connect.somtoday.nl/changelog)\n\nAlgemene opzet\n--------------\n\nHet doel van het Somtoday Koppelvlak is om als generiek aansluitpunt voor zo veel mogelijk koppelpartijen van Somtoday te kunnen dienen, en de school de handvatten te bieden de koppelingen in te richten in overeenkomst met de privacywetgeving. De school kan, na het activeren van een koppeling, restricties leggen op welke leerlingen (zie Breedtepermissies) en welke velden (zie Veldpermissies) gedeeld worden met de koppelpartij. Op deze manier ontvangt de koppelpartij enkel de data die relevant is.\n\nIn Somtoday worden scholen in organisatorisch opzicht in twee niveaus opgesplitst. \nHet hoogste organisatorische lichaam is de Instelling, ook wel organisatie genoemd. Dit is eigenlijk het overkoepelende bestuursorgaan van de school.\n\nHieronder vallen de Vestigingen, waar les gegeven wordt.    \n\nOmgevingen\n----------\n\nHet Somtoday OATP landschap kent vier niveaus: nightly, acceptatie, test en productie.\n\nDe nightly-omgeving is alleen voor intern gebruik. Acceptatie bevat demodata en is geschikt voor de eerste fase van koppelen. Test is een kopieslag van productie en kan gebruikt worden voor een test met een gezamenlijke klant van Somtoday en koppelpartner. \n\nAanroepen koppelvlak\n--------------------\n\nHet Connect koppelvlak werkt op basis van de OAuth 2 Client Credentials flow. (Zie bijvoorbeeld: https://auth0.com/docs/authorization/flows/client-credentials-flow) \n\nVoordat een koppelpartij het Somtoday Connect Koppelvlak kan aanspreken moet er een OAuth Client voor deze koppelpartij worden ingericht. Deze Client geeft algemene toegang tot het koppelvlak. Data van scholen kan pas opgehaald worden nadat de school dit heeft ingericht. Dit wordt op Vestigingsniveau ingericht, wat inhoudt dat rechten van een koppelpartij per vestiging kunnen verschillen, en data per vestiging opgehaald dient te worden.\n\nOm het Somtoday Connect Koppelvlak aan te roepen moet men de volgende vier stappen doorlopen.\n\n1. Organisatie UUID. Let op: deze identifier moet NIET door de eindgebruiker aangeleverd worden (om te voorkomen dat data van school x door school y uitgelezen wordt).\nDeze UUID kan op twee manieren achterhaald worden, namelijk door de koppelpartij zelf, handmatig te achterhalen \nvia ```https://api.somtoday.nl/rest/v1/connect/instelling``` (voorbeeld productieomgeving). Op basis van naam of brinnummer kan gezocht worden naar de juiste organisatie, welke gevalideerd door een medewerker van de koppelpartij aan de juist organisatie binnen de koppelpartij gelinkt kan worden. Daarnaast kan het geautomatiseerd aangeleverd worden door een SSO authenticatie naar Somtoday te starten. Zie onderstaande documentatie.\n\n2. OAuth token aanvragen via een POST request naar ```https://somtoday.nl/oauth2/token?organisation={organisation_uuid}``` (voorbeeld productieomgeving) met als organisation query parameter het UUID van de organisatie waarvoor de koppelpartij een request wil doen. Dit token is uniek per organisatie en dient in verdere requests meegestuurd te worden in een Authorization header als bearer token.\n\n3. Vestigings UUID achterhalen met een request naar ```https://api.somtoday.nl/rest/v1/connect/vestiging``` (voorbeeld productieomgeving), om alle Vestigingen op te vragen waar de koppelpartij op dat moment data mag opvragen.\n\n4. Aanroepen gewenste endpoint aan de hand van het Vestigings UUID (alleen het Instelling- en Vestigingendpoint zijn niet aan een specifieke vestiging gebonden). \nEen request om alle Leerlingen van de Vestiging op te halen zal bijvoorbeeld een GET request naar het volgende endpoint zijn ```https://api.somtoday.nl/rest/v1/connect/vestiging/{vestiging_uuid}/leerling?amount=100```\n\n\nOrganisatie UUID valideren via SSO (OAuth2 Authorisation Code Flow met OpenID Connect extensie)\n-----------------------------------------------------------------------------------------------\n\nDoordat de koppeling Somtoday - Koppelpartij een server to server koppeling is, zonder dat hier een eindgebruiker aan te pas komt, \nkan er omdat Somtoday een organisatie UUID vereist, een organisatie synchronisatie probleem (data school x beschikbaar op school y) ontstaan. Het is immers niet bekend welke \norganisatie UUID bij elke omgeving van de koppelpartij hoort. Wanneer een gebruiker ingelogd is in het systeem van de koppelpartij\n(en deze gebruiker heeft de rechten de Somtoday Connect koppeling in te richten voor die school), kan er een Single Sign On call naar\nSomtoday worden gedaan. Hieronder een stappenplan (tip: gebruik een oauth2 + oidc library om de flows te implementeren):\n\n1. Gebruiker benadert de applicatie van de koppelpartner.\n2. In zijn (organisatie) omgeving klikt de gebruiker op knop (bijvoorbeeld: \"koppel een Somtoday omgeving\"), waarna een OAuth2\nauthorization code flow door naar het authorization endpoint te redirecten (met scope openid). Stuur ook een claimrequest 'affiliation' mee om te \nkunnen valideren of het een docent (en geen leerling!) is die inlogt. (voorbeeld queryparameter: `claims=%7B%22id_token%22%3A%7B%22vestigingen%22%3Anull%2C%22affiliation%22%3Anull%2C%22uuid%22%3Anull%7D%7D`)\n3. Wanneer de gebruiker bij Somtoday geen sessie heeft, komt hij/zij uit op https://inloggen.somtoday.nl \n4. Somtoday vraagt gebruiker om zijn/haar gebruikersnaam en wachtwoord (of gebruiker logt in via alternatieve provider zoals Google of Microsoft).\n5. Somtoday heeft geconstateerd dat de gebruikersnaam en wachtwoord kloppen en geeft gebruiker een authorisatiecode en de geregistreerde redirect_uri van de koppelpartij.\n6. Somtoday redirect de gebruiker naar de redirect_uri van de applicatie met authorisatiecode als queryparameter in URL.\n7. Applicatie gebruikt authorisatiecode en de geregistreerde client_id en secret (dezelfde als in communicatie met deze api wordt gebruikt)  om het token exchange endpoint te benaderen en een id_token op te vragen.\n8. Somtoday controleert de authorisatiecode en de client_id en secret en geeft een id_token (en een access- en refreshtoken) uit.\n9. Applicatie gebruikt id_token om identiteit van ingelogde gebruiker vast te stellen op basis van de OpenID configuration van Somtoday. De authenticiteit van de data wordt hiermee gevalideerd.\n10. In de claimset uit het id_token kan men de organisatie uuid extracten en de affiliation valideren (kan bevatten: “employee”, “student”, “parent/guardian”). Het 'subject' field bevat: OrganisationUUID/AccountUUID.\n\nDit klinkt als een complex stappenplan, maar wanneer er een oauth2 oidc library wordt ingezet, komt het vooral neer op:\n\n1. Redirect naar Somtoday.\n2. Haal het id_token op en laat de library de validatie doen.\n3. Extract organisatie uuid.\n\nMeer informatie over OAuth2.0 en OpenID Connect (OIDC): https://oauth.net/2/\n\nVormgeving van de responses\n---------------------------\n\nHet Somtoday Connect Koppelvlak levert alle gevraagde data in JSON format uit.\nAlle uitgeleverde data wordt verpakt in Response objecten en het type van het Response object is afhankelijk van de inhoud (LeerlingResponse, MedewerkerResponse, LesgroepResponse, enz.)\n\n\nBij de JSON objecten die in het Response object zitten kunnen de volgende kanttekeningen worden geplaatst:\n- Wanneer de waarde van een veld in Somtoday null is, wordt dat veld niet aan de JSON toegevoegd.\n- Wanneer de koppelpartij geen permissies heeft voor een bepaald veld, wordt dat veld niet aan de JSON toegevoegd.\n- Wanneer de waarde van een veld in Somtoday een lege lijst is, zal de waarde van het veld in de JSON response een lege array zijn.\nKoppelpartijen doen er dus goed aan rekening ermee te houden dat de JSON die zij als response krijgen 'onvolledig' zou kunnen zijn.\n\nBreedtepermissies\n-----------------\n\nZoals aangegeven kan een school inrichten welke gegevens aan een bepaalde koppelpartij worden uitgeleverd door het Somtoday Connect Koppelvlak.\nIn dit opzicht wordt gesproken van breedtepermissies wanneer men spreekt van het beperken van de data zodat alleen gegevens die betrekking hebben op een subset van de Leerlingen wordt uitgeleverd.\n\nDit kan tot uiting komen in dat een koppelpartij bij een bepaalde school bijvoorbeeld alleen de Lesgroepen kan ophalen die aan bepaalde vakken gekoppeld zijn.\nIn die situatie kan diezelfde koppelpartij bij diezelfde school ook alleen de Leerlingen ophalen die in die Lesgroepen zitten, en ook alleen de Medewerkers ophalen die Docent zijn van die Lesgroepen.\n\n\nVeldpermissies\n----------------\n\nDe andere dimensie waarin scholen de uitgeleverde data kunnen beperken is door bepaalde velden niet mee te laten leveren.\nDe koppelpartij geeft bij Somtoday aan welke velden verplicht zijn en daarnaast welke velden optioneel zijn. Wanneer een school een koppeling met de koppelpartij open zet, worden de verplichte velden standaard meegegeven en de optionele velden alleen wanneer de school hier toestemming voor geeft. \nDe koppelpartij kan de veldpermissies opvragen door gebruik te maken van de veldpermissies query parameter, bijvoorbeeld met ```https://api.somtoday.nl/rest/v1/connect/vestiging/{vestiging_uuid}/lesgroep/{lesgroep_uuid}?veldpermissies=true```. \nMerk op dat de veldpermissies altijd gelden voor één specifieke Koppelpartij voor één specifieke Vestiging voor één specifiek entiteittype.\nDe veldpermissies voor de ene Leerling van een Vestiging zullen voor dezelfde Koppelpartij dus precies hetzelfde zijn als de veldpermissies voor een andere Leerling van diezelfde Vestiging. \nWanneer een koppelpartij geen permissie heeft voor bepaalde velden, worden die velden niet meegeleverd in de uiteindelijke response body. \nTijdens de aansluitfase zorgt Somtoday ervoor dat de koppelpartij, ter demonstratie, toegang heeft tot minstens twee vestigingen met demodata, waarvan bij één vestiging enkele velden niet geautoriseerd zijn. \n\n\nDe peilschooljaar parameter\n---------------------------\n\n\nHet Somtoday Connect Koppelvlak geeft standaard alleen de data terug die op het moment van het request actueel is.    \nMet de peilschooljaar parameter kan ook data opgehaald worden die nu nog niet actueel is. Met waarde HUIDIG worden ook aanstaande wijzigingen binnen het huidige schooljaar meegegeven. Met waarde VOLGEND wordt data van het volgende schooljaar meegegeven.         \nHet is niet mogelijk om historische informatie op te vragen uit het Somtoday Connect Koppelvlak.\n\nEvents endpoint\n---------------\nLet op: dit endpoint is nog niet geïmplementeerd.\n\nSommige koppelpartijen willen graag zorgen dat hun data up-to-date is met die van Somtoday. \nOmdat het voor zowel Somtoday, vanwege de load op het systeem, als voor de Koppelpartij zelf, vanwege de doorlooptijd en bewerkelijkheid van zo'n proces, onwenselijk is om periodiek alle data uit het Somtoday Connect Koppelvlak op te vragen hebben we een events endpoint gerealiseerd.\nWanneer een entiteit in het Koppelvlak wijzigt zal op dit endpoint een nieuwe Event verschijnen.\nIn een Event staat het UUID van de gewijzigde entiteit en de URL waar deze kan worden opgehaald, alsmede een tijdstip waarop de wijziging geregistreerd is en een indexnummer.\nKoppelpartijen kunnen deze Events gebruiken om alleen de gewijzigde data uit het Somtoday Connect Koppelvlak op te halen.\nHet indexnummer kan gebruikt worden om oudere Events, die de Koppelpartij al een keer ontvangen heeft, over te slaan.\nKoppelpartijen kunnen Events ook filteren op specifieke entiteiten wanneer ze bijvoorbeeld geen interesse hebben in andere entiteiten of wanneer het voor hun eigen proces beter uitkomt om één entiteittype tegelijk te updaten.\nEvents worden uitgeleverd in de volgorde waarin ze zijn geregistreerd.\n\n\nVerdere aanbevelingen\n---------------------\n\nVoor het genereren van een Client stub of API files op basis van deze openapi spec yaml verwijzen we naar de Openapi Generator:\n\nhttps://openapi-generator.tech/\n\nWij hebben zelf erg goede ervaringen met deze tool.\n\nTer afsluiting\n--------------\n\nWij proberen met de documentatie die beschikbaar is in deze OpenAPI spec yaml zo veel mogelijk vragen bij Koppelpartijen weg te nemen.\nMochten er desondanks onduidelijkheden bestaan over de werking van het Somtoday Connect Koppelvlak dan horen wij die graag.\nNiet alleen beantwoorden wij ze graag maar door jullie vragen kunnen wij ook onze documentatie verbeteren, om toekomstige Koppelpartijen nog beter van dienst te zijn :)\n"
  },
  "servers": [
    {
      "url": "http://api.nightly.somtoday.build/rest/v1",
      "description": "Nightly omgeving binnen Somtoday oatp landschap. Alleen intern beschikbaar."
    },
    {
      "url": "https://api.acceptatie.somtoday.nl/rest/v1",
      "description": "Acceptatie omgeving binnen Somtoday oatp landschap. Toegang op aanvraag."
    },
    {
      "url": "https://api.test.somtoday.nl/rest/v1",
      "description": "Test omgeving binnen Somtoday oatp landschap. Toegang op aanvraag. Achterliggende data wordt maandelijks ververst."
    },
    {
      "url": "https://api.somtoday.nl/rest/v1",
      "description": "Somtoday Productie omgeving."
    }
  ],
  "components": {
    "securitySchemes": {
      "somtoday-authenticator-nightly": {
        "description": "authenticeer voor de Nightly omgeving",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://inloggen.nightly.somtoday.nl/oauth2/token?organisation=1349fac3-259a-44fd-a1f1-6fe5f8a2f39e",
            "scopes": {}
          }
        }
      },
      "somtoday-authenticator-acceptatie": {
        "description": "authenticeer voor de Acceptatie omgeving",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://inloggen.acceptatie.somtoday.nl/oauth2/token?organisation=1349fac3-259a-44fd-a1f1-6fe5f8a2f39e",
            "scopes": {}
          }
        }
      },
      "somtoday-authenticator-test": {
        "description": "authenticeer voor de Test omgeving",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://inloggen.test.somtoday.nl/oauth2/token?organisation=1349fac3-259a-44fd-a1f1-6fe5f8a2f39e",
            "scopes": {}
          }
        }
      },
      "somtoday-authenticator-productie": {
        "description": "authenticeer voor de Productie omgeving - voeg een query parameter 'organisation' met het InstellingsUUID waarvoor je een call gaat doen toe aan je token request, net als in deze spec bij de andere omgevingen van tevoren is ingevuld.",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://inloggen.somtoday.nl/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "InstellingResponse": {
        "type": "object",
        "description": "Response object voor het Instelling endpoint.",
        "properties": {
          "instellingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Instelling"
            }
          }
        }
      },
      "VestigingResponse": {
        "type": "object",
        "description": "Response object voor het Vestiging endpoint.",
        "properties": {
          "vestigingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vestiging"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/VestigingVeldpermissies"
          }
        }
      },
      "VestigingVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van een Vestiging de Koppelpartij bij deze school recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "naam": {
            "type": "boolean"
          },
          "brins": {
            "type": "boolean"
          },
          "afkorting": {
            "type": "boolean"
          },
          "digideliveryid": {
            "type": "boolean"
          }
        }
      },
      "LeerlingResponse": {
        "type": "object",
        "description": "Response object voor de Leerling endpoints.",
        "properties": {
          "leerlingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leerling"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/LeerlingVeldpermissies"
          }
        }
      },
      "LeerlingVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de Leerlingen van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "eckid": {
            "type": "boolean"
          },
          "leerlingnummer": {
            "type": "boolean"
          },
          "roepnaam": {
            "type": "boolean"
          },
          "voornamen": {
            "type": "boolean"
          },
          "voorletters": {
            "type": "boolean"
          },
          "voorvoegsel": {
            "type": "boolean"
          },
          "achternaam": {
            "type": "boolean"
          },
          "geslacht": {
            "type": "boolean"
          },
          "geboortedatum": {
            "type": "boolean"
          },
          "emailadres": {
            "type": "boolean"
          },
          "mobielnummer": {
            "type": "boolean"
          },
          "telefoonnummer": {
            "type": "boolean"
          },
          "adres": {
            "type": "boolean"
          },
          "verzorgers": {
            "type": "boolean"
          },
          "vestiging": {
            "type": "boolean"
          },
          "plaatsingen": {
            "type": "boolean",
            "description": "Veld dat beschrijft of de Koppelpartij van de Leerlingen van deze Vestiging een lijst van Plaatsingen te zien krijgt."
          },
          "plaatsingVeldpermissies": {
            "$ref": "#/components/schemas/PlaatsingVeldpermissies"
          },
          "lesgroepen": {
            "type": "boolean"
          },
          "vakkeuzes": {
            "type": "boolean"
          },
          "gebruikersnaam": {
            "type": "boolean"
          },
          "eduPersonRealId": {
            "type": "boolean"
          },
          "parnassysLeerlingNummer": {
            "type": "boolean"
          },
          "geboorteplaats": {
            "type": "boolean"
          },
          "geboorteland": {
            "type": "boolean"
          },
          "wenstContactViaEMail": {
            "type": "boolean"
          },
          "BSN": {
            "type": "boolean"
          },
          "isActief": {
            "type": "boolean"
          },
          "schoolVanHerkomstBrin": {
            "type": "boolean"
          },
          "schoolVanHerkomstNaam": {
            "type": "boolean"
          },
          "adviesSchoolVanHerkomst": {
            "type": "boolean"
          },
          "onderwijsSinds": {
            "type": "boolean"
          },
          "externDebiteurnummer": {
            "type": "boolean"
          },
          "bankgegevens": {
            "type": "boolean"
          },
          "debiteuradres": {
            "type": "boolean"
          }
        }
      },
      "PlaatsingVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de Plaatsingen van de Leerlingen van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "schooljaar": {
            "type": "boolean"
          },
          "startdatum": {
            "type": "boolean"
          },
          "einddatum": {
            "type": "boolean"
          },
          "leerjaar": {
            "type": "boolean"
          },
          "opleiding": {
            "type": "boolean"
          },
          "stamgroep": {
            "type": "boolean"
          },
          "mentor_plaatsing": {
            "type": "boolean"
          },
          "eerste_mentor_stamgroep": {
            "type": "boolean"
          },
          "tweede_mentor_stamgroep": {
            "type": "boolean"
          },
          "digiDeliveryId": {
            "type": "boolean"
          },
          "opleidingskenmerken": {
            "type": "boolean"
          }
        }
      },
      "PlaatsingResponse": {
        "type": "object",
        "description": "Response object voor de Plaatsing endpoints.",
        "properties": {
          "plaatsingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plaatsing"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/PlaatsingVeldpermissies"
          }
        }
      },
      "MedewerkerResponse": {
        "type": "object",
        "description": "Response object voor de Medewerker endpoints.",
        "properties": {
          "medewerkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Medewerker"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/MedewerkerVeldpermissies"
          }
        }
      },
      "MedewerkerVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de Medewerkers van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "eckid": {
            "type": "boolean"
          },
          "bsn": {
            "type": "boolean"
          },
          "roepnaam": {
            "type": "boolean"
          },
          "voorletters": {
            "type": "boolean"
          },
          "voorvoegsel": {
            "type": "boolean"
          },
          "achternaam": {
            "type": "boolean"
          },
          "geslacht": {
            "type": "boolean"
          },
          "geboortedatum": {
            "type": "boolean"
          },
          "adres": {
            "type": "boolean"
          },
          "emailadres": {
            "type": "boolean"
          },
          "prive_email": {
            "type": "boolean"
          },
          "werk_telefoonnummer": {
            "type": "boolean"
          },
          "prive_telefoonnummer": {
            "type": "boolean"
          },
          "medewerkernummer": {
            "type": "boolean"
          },
          "afkorting": {
            "type": "boolean"
          },
          "lesgroepen": {
            "type": "boolean"
          },
          "vestiging": {
            "type": "boolean"
          },
          "hoofdvestiging": {
            "type": "boolean"
          },
          "is_docent": {
            "type": "boolean"
          },
          "functie": {
            "type": "boolean"
          },
          "gebruikersnaam": {
            "type": "boolean"
          },
          "externnummer": {
            "type": "boolean"
          },
          "eduPersonRealId": {
            "type": "boolean"
          },
          "datumInDienst": {
            "type": "boolean"
          },
          "datumUitDienst": {
            "type": "boolean"
          },
          "redenUitDienst": {
            "type": "boolean"
          }
        }
      },
      "LesgroepResponse": {
        "type": "object",
        "description": "Response object voor de Lesgroep endpoints.",
        "properties": {
          "lesgroepen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lesgroep"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/LesgroepVeldpermissies"
          }
        }
      },
      "LesgroepVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de Lesgroepen van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "naam": {
            "type": "boolean"
          },
          "leerlingen": {
            "type": "boolean"
          },
          "docenten": {
            "type": "boolean"
          },
          "vak": {
            "type": "boolean"
          },
          "vaknaam": {
            "type": "boolean"
          },
          "landelijke_vakcode": {
            "type": "boolean"
          },
          "vakuuid": {
            "type": "boolean"
          },
          "vakkeuzes": {
            "type": "boolean"
          },
          "leerjaar": {
            "type": "boolean"
          },
          "schooljaar": {
            "type": "boolean"
          },
          "onderwijssoort": {
            "type": "boolean"
          },
          "vestiging": {
            "type": "boolean"
          }
        }
      },
      "StamgroepResponse": {
        "type": "object",
        "description": "Response object voor de Stamgroep endpoints.",
        "properties": {
          "stamgroepen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stamgroep"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/StamgroepVeldpermissies"
          }
        }
      },
      "StamgroepVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van een Stamgroep van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "omschrijving": {
            "type": "boolean"
          },
          "leerjaar": {
            "type": "boolean"
          },
          "onderwijssoort": {
            "type": "boolean"
          },
          "naam": {
            "type": "boolean"
          },
          "leerlingen": {
            "type": "boolean"
          },
          "eerste_mentor_stamgroep": {
            "type": "boolean"
          },
          "tweede_mentor_stamgroep": {
            "type": "boolean"
          }
        }
      },
      "VakVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van een Vak van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "afkorting": {
            "type": "boolean"
          },
          "naam": {
            "type": "boolean"
          }
        }
      },
      "VakResponse": {
        "type": "object",
        "description": "Response object voor de Vak endpoints.",
        "properties": {
          "vakken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vak"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/VakVeldpermissies"
          }
        }
      },
      "OpleidingVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van een Opleiding van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "afkorting": {
            "type": "boolean"
          },
          "naam": {
            "type": "boolean"
          },
          "code": {
            "type": "boolean"
          },
          "landelijke_naam": {
            "type": "boolean"
          },
          "profielafkorting": {
            "type": "boolean"
          },
          "profielnaam": {
            "type": "boolean"
          },
          "leerjaren": {
            "type": "boolean"
          },
          "vanafschooljaar": {
            "type": "boolean"
          },
          "totschooljaar": {
            "type": "boolean"
          }
        }
      },
      "OpleidingResponse": {
        "type": "object",
        "description": "Response object voor de Opleiding endpoints.",
        "properties": {
          "opleidingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Opleiding"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/OpleidingVeldpermissies"
          }
        }
      },
      "OuderVerzorgerResponse": {
        "type": "object",
        "description": "Response object voor de OuderVerzorger endpoints.",
        "properties": {
          "ouderVerzorgers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OuderVerzorger"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/OuderVerzorgerVeldpermissies"
          }
        }
      },
      "OuderVerzorgerVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de OuderVerzorgers van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "geslacht": {
            "type": "boolean"
          },
          "voorletters": {
            "type": "boolean"
          },
          "voorvoegsel": {
            "type": "boolean"
          },
          "achternaam": {
            "type": "boolean"
          },
          "gebruikersnaam": {
            "type": "boolean"
          },
          "emailadres": {
            "type": "boolean"
          },
          "telefoonnummer": {
            "type": "boolean"
          },
          "adres": {
            "type": "boolean"
          },
          "leerlingen_van_vestiging": {
            "type": "boolean"
          },
          "relatie_tot_leerlingen": {
            "type": "boolean"
          },
          "relatie_tot_leerlingen_permissies": {
            "$ref": "#/components/schemas/LeerlingReferentieVeldpermissies"
          },
          "wenstContactViaEMail": {
            "type": "boolean"
          },
          "uitgebreidTelefoonnummer": {
            "type": "boolean"
          },
          "uitgebreidMobielNummer": {
            "type": "boolean"
          },
          "uitgebreidMobielWerkNummer": {
            "type": "boolean"
          }
        }
      },
      "LeerlingReferentieVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de relatie tot de leerlingen van deze Vestiging de Koppelpartij recht heeft. Deze Vestiging is in deze context de Vestiging waarvoor het request gedaan wordt.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "relatiesoort": {
            "type": "boolean"
          },
          "ouderlijk_gezag": {
            "type": "boolean"
          },
          "mag_post_ontvangen": {
            "type": "boolean"
          }
        }
      },
      "LeerlingVestigingVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de referentie van een leerling op een bepaalde vestiging de Koppelpartij recht heeft. Deze Vestiging is in deze context de Vestiging waar de leerling een plaatsing heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "vestiging": {
            "type": "boolean"
          }
        }
      },
      "LeerlingPasfotoResponse": {
        "type": "object",
        "description": "Response object voor het Pasfoto endpoint voor de Leerlingen.",
        "properties": {
          "pasfoto": {
            "$ref": "#/components/schemas/Pasfoto"
          }
        }
      },
      "MedewerkerPasfotoResponse": {
        "type": "object",
        "description": "Response object voor het Pasfoto endpoint voor de Medewerkers.",
        "properties": {
          "pasfoto": {
            "$ref": "#/components/schemas/Pasfoto"
          }
        }
      },
      "HuiswerkResponse": {
        "type": "object",
        "properties": {
          "huiswerk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Huiswerk"
            }
          }
        }
      },
      "RoosterResponse": {
        "type": "object",
        "properties": {
          "rooster": {
            "$ref": "#/components/schemas/Rooster"
          }
        }
      },
      "VakkeuzeVeldpermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van de Vakkeuzes van de Leerlingen van deze Vestiging de Koppelpartij recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "begindatum": {
            "type": "boolean"
          },
          "einddatum": {
            "type": "boolean"
          },
          "landelijke_vakcode": {
            "type": "boolean"
          },
          "landelijke_vaknaam": {
            "type": "boolean"
          },
          "school_vaknaam": {
            "type": "boolean"
          },
          "school_vakafkorting": {
            "type": "boolean"
          },
          "niveau": {
            "type": "boolean"
          },
          "leerjaar": {
            "type": "boolean"
          },
          "onderwijssoort": {
            "type": "boolean"
          },
          "opleiding": {
            "type": "boolean"
          },
          "vestiging": {
            "type": "boolean"
          }
        }
      },
      "VoortgangsdossierResponse": {
        "type": "object",
        "description": "Response object voor endpoint waarop de voortgangsdossiers van een leerling worden uitgeleverd",
        "properties": {
          "voortgangsdossiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoortgangsDossier"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/VoortgangsdossierPermissies"
          }
        }
      },
      "VoortgangsdossierPermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van het voorgangsdossier van de leerling de Koppelpartij recht heeft.",
        "properties": {
          "vakuuid": {
            "type": "boolean"
          },
          "vaknaam": {
            "type": "boolean"
          },
          "niveau": {
            "type": "boolean"
          },
          "leerjaar": {
            "type": "boolean"
          },
          "periodes": {
            "type": "boolean"
          },
          "periodeVeldpermissies": {
            "$ref": "#/components/schemas/VoortgangsdossierPeriodePermissies"
          }
        }
      },
      "VoortgangsdossierPeriodePermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van het de periodes uit een voorgangsdossier van de leerling de Koppelpartij recht heeft.",
        "properties": {
          "periode": {
            "type": "boolean"
          },
          "periodegemiddelde": {
            "type": "boolean"
          },
          "rapportgemiddelde": {
            "type": "boolean"
          },
          "resultaten": {
            "type": "boolean"
          }
        }
      },
      "VoortgangsDossier": {
        "type": "object",
        "description": "Object dat het voorgangsdossier van de leerling de Koppelpartij beschrijft.",
        "properties": {
          "vakuuid": {
            "type": "string",
            "format": "uuid"
          },
          "vaknaam": {
            "type": "string",
            "description": "naam van het schoolspecifieke vak."
          },
          "niveau": {
            "type": "string"
          },
          "leerjaar": {
            "type": "integer",
            "description": "leerjaar 1 t/m 6"
          },
          "omschrijving_standaard": {
            "type": "string",
            "description": "omschrijving van de standaard normering voor dit dossier."
          },
          "omschrijving_alternatief": {
            "type": "string",
            "description": "omschrijving van de alternatieve normering voor dit dossier."
          },
          "periodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoortgangsdossierPeriode"
            }
          }
        }
      },
      "VoortgangsdossierPeriode": {
        "type": "object",
        "description": "Object dat een periode uit het voorgangsdossier van de leerling de Koppelpartij beschrijft.",
        "properties": {
          "periode": {
            "type": "integer"
          },
          "periodegemiddelde": {
            "type": "string"
          },
          "periodegemiddelde_alternatief": {
            "type": "string"
          },
          "rapportgemiddelde": {
            "type": "string"
          },
          "rapportgemiddelde_alternatief": {
            "type": "string"
          },
          "resultaten": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DossierResultaat"
            }
          }
        }
      },
      "DossierResultaat": {
        "type": "object",
        "description": "Object dat een resultaat uit periode uit het voorgangsdossier van de leerling de Koppelpartij beschrijft.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "omschrijving": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "toetsType": {
            "type": "string",
            "enum": [
              "TOETS",
              "SAMENGESTELDETOETS"
            ],
            "description": "Het type toets bij dit resultaat. De opties zijn TOETS, SAMENGESTELDETOETS"
          },
          "weging": {
            "type": "integer"
          },
          "geldend_resultaat": {
            "type": "string"
          },
          "geldend_resultaat_alternatief": {
            "type": "string",
            "description": "geldend resultaat volgens alternatieve normering"
          },
          "pogingen": {
            "type": "array",
            "description": "resultaatpogingen alleen beschikbaar bij type TOETS",
            "items": {
              "$ref": "#/components/schemas/DossierResultaatPoging"
            }
          },
          "deeltoetsen": {
            "type": "array",
            "description": "deeltoetsen bij resultaat alleen beschikbaar bij type SAMENGESTELDETOETS",
            "items": {
              "$ref": "#/components/schemas/Deeltoets"
            }
          }
        }
      },
      "DossierResultaatPoging": {
        "type": "object",
        "description": "Object dat een poging van een resultaat uit periode uit het voorgangsdossier van de leerling de Koppelpartij beschrijft.",
        "properties": {
          "resultaat": {
            "type": "string"
          },
          "resultaat_alternatief": {
            "type": "string"
          },
          "poging": {
            "type": "integer"
          }
        }
      },
      "Deeltoets": {
        "type": "object",
        "description": "Deeltoets",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "omschrijving": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "geldend_resultaat": {
            "type": "string"
          },
          "geldend_resultaat_alternatief": {
            "type": "string"
          },
          "weging": {
            "type": "integer"
          },
          "pogingen": {
            "type": "array",
            "description": "resultaatpogingen alleen beschikbaar bij type TOETS",
            "items": {
              "$ref": "#/components/schemas/DossierResultaatPoging"
            }
          }
        }
      },
      "ExamendossierResponse": {
        "type": "object",
        "description": "esponse object voor endpoint waarop het examendossier van een vak van een leerling wordt uitgeleverd",
        "properties": {
          "examendossiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExamenDossier"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/ExamendossierPermissies"
          }
        }
      },
      "ExamendossierPermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden uit het examendossier van de leerling de Koppelpartij recht heeft.",
        "properties": {
          "vakUUID": {
            "type": "boolean"
          },
          "niveau": {
            "type": "boolean"
          },
          "se_eindcijfer": {
            "type": "boolean"
          },
          "eindcijfer": {
            "type": "boolean"
          },
          "se_resultaten": {
            "type": "boolean"
          },
          "ce_deel": {
            "type": "boolean"
          },
          "ce_deelVeldpermissies": {
            "$ref": "#/components/schemas/ExamendossierCeDeelPermissies"
          }
        }
      },
      "ExamendossierCeDeelPermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden uit CE-deel van het examendossier van de leerling de Koppelpartij recht heeft.",
        "properties": {
          "ce_eindcijfer": {
            "type": "boolean"
          },
          "ce_resultaten": {
            "type": "boolean"
          }
        }
      },
      "ExamenDossier": {
        "type": "object",
        "description": "Object dat het examendossier van de leerling beschrijft.",
        "properties": {
          "vakUUID": {
            "type": "string",
            "format": "uuid"
          },
          "vakNaam": {
            "type": "string"
          },
          "niveau": {
            "type": "string"
          },
          "lichting": {
            "type": "string"
          },
          "eindcijfer": {
            "type": "string"
          },
          "se_resultaten": {
            "$ref": "#/components/schemas/ExamendossierSeDeel"
          },
          "ce_resultaten": {
            "$ref": "#/components/schemas/ExamendossierCeDeel"
          }
        }
      },
      "ExamendossierSeDeel": {
        "type": "object",
        "description": "Object dat het SE-deel van het examendossier van de leerling beschrijft.",
        "properties": {
          "se_eindcijfer": {
            "type": "string"
          },
          "se_resultaten": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DossierResultaat"
            }
          }
        }
      },
      "ExamendossierCeDeel": {
        "type": "object",
        "description": "Object dat het CE-deel van het examendossier van de leerling beschrijft.",
        "properties": {
          "ce_eindcijfer": {
            "type": "string"
          },
          "ce_resultaten": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExamendossierCeResultaat"
            }
          }
        }
      },
      "ExamendossierCeResultaat": {
        "type": "object",
        "properties": {
          "tijdvak": {
            "type": "string"
          },
          "geldend_resultaat": {
            "type": "string"
          },
          "variant": {
            "type": "string"
          },
          "deelexamens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeelExamen"
            }
          }
        }
      },
      "DeelExamen": {
        "type": "object",
        "description": "Object dat een deelexamen uit het CE-deel van het examendossier van de leerling beschrijft.",
        "properties": {
          "naam": {
            "type": "string"
          },
          "geldend_resultaat": {
            "type": "string"
          },
          "variant": {
            "type": "string"
          }
        }
      },
      "Instelling": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string",
            "description": "De naam van de Instelling.",
            "example": "Somtoday College"
          },
          "afkorting": {
            "type": "string",
            "description": "De afkorting van de naam van de Instelling",
            "example": "stc"
          },
          "brins": {
            "description": "Lijst van BRIN4 nummers van de instelling. Het eerste BRINnummer is het standaardnummer.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "12AB",
              "34AB"
            ]
          }
        }
      },
      "Vestiging": {
        "type": "object",
        "description": "Een Vestiging is een organisatorisch lichaam binnen een school. Een school kan meerdere Vestigingen hebben.\nClients van het Connect Koppelvlak krijgen altijd permissies voor specifieke Vestigingen. Deze permissies kunnen dus per Vestiging verschillen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string",
            "description": "De naam van de Vestiging."
          },
          "afkorting": {
            "type": "string",
            "description": "De afkorting van de naam van de Vestiging."
          },
          "brins": {
            "type": "array",
            "description": "Lijst van BRIN6 nummers van de Vestiging.",
            "items": {
              "type": "string"
            },
            "example": [
              "12AB45",
              "12AB46",
              "12AB47"
            ]
          },
          "externalidentifiers": {
            "type": "array",
            "description": "Lijst van BRIN6 nummers van de Vestiging met eventueel bijbehorende digideliveryID's.",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentifiers"
            }
          }
        }
      },
      "ExternalIdentifiers": {
        "type": "object",
        "properties": {
          "brinnr": {
            "type": "string",
            "example": "12AB45"
          },
          "digideliveryid": {
            "type": "string",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        }
      },
      "Adres": {
        "type": "object",
        "description": "Adresgegevens van een Leerling of Medewerker. Merk op dat adressen in het buitenland niet ondersteund worden.",
        "properties": {
          "postcode": {
            "type": "string",
            "example": "7411HV"
          },
          "straat": {
            "type": "string",
            "example": "Singel"
          },
          "huisnummer": {
            "type": "string",
            "example": 9
          },
          "huisnummer_toevoeging": {
            "type": "string"
          },
          "huisnummer_zonder_toevoeging": {
            "type": "string"
          },
          "woonplaats": {
            "type": "string",
            "example": "Deventer"
          },
          "land": {
            "type": "string",
            "example": "Nederland"
          },
          "buitenlands_adres": {
            "type": "string"
          }
        }
      },
      "AdresNederland": {
        "type": "object",
        "description": "Nederlandse adresgegevens",
        "properties": {
          "postcode": {
            "type": "string",
            "example": "7411HV"
          },
          "huisnummer": {
            "type": "string",
            "example": 9
          }
        },
        "required": [
          "postcode",
          "huisnummer"
        ]
      },
      "AdresBuitenland": {
        "type": "object",
        "description": "Buitenlandse adresgegevens",
        "properties": {
          "adres_regel_1": {
            "type": "string",
            "example": "9 Single Road"
          },
          "adres_regel_2": {
            "type": "string",
            "example": "Deventer"
          },
          "adres_regel_3": {
            "type": "string"
          },
          "land": {
            "type": "string",
            "description": "GBA landcode",
            "example": "6029"
          }
        },
        "required": [
          "adres_regel_1",
          "land"
        ]
      },
      "Leerling": {
        "type": "object",
        "description": "Een Leerling op een school.\nEen Leerling is uniek binnen een Instelling maar kan op verschillende momenten onderwijs volgen op verschillende Vestigingen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "eckid": {
            "type": "string",
            "description": "Het ECK-ID van de Leerling."
          },
          "leerlingnummer": {
            "type": "integer",
            "description": "Het leerlingnummer is uniek binnen de Instelling.",
            "example": 123456
          },
          "roepnaam": {
            "type": "string",
            "description": "De roepnaam van de Leerling. Er is ook een veld voor de volledige voornamen van de Leerling.",
            "example": "Teddy"
          },
          "voornamen": {
            "type": "string",
            "description": "De volledige voornamen van de Leerling. Er is ook een veld voor de roepnaam van de Leerling.",
            "example": "Theodorus Fransiscus"
          },
          "voorletters": {
            "type": "string",
            "description": "De voorletters van de voornamen van de Leerling.",
            "example": "TF"
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de Leerling.",
            "example": "van"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de Leerling. Er is een apart veld voor de voorvoegsels van de achternaam.",
            "example": "Wobbelbroeck"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "ONBEKEND",
              "MAN",
              "VROUW"
            ],
            "description": "Het geslacht van de Leerling. De opties zijn MAN, VROUW en ONBEKEND."
          },
          "geboortedatum": {
            "type": "string",
            "format": "date",
            "description": "De geboortedatum van de Leerling, in het format YYYY-MM-DD.",
            "example": "2008-02-08"
          },
          "emailadres": {
            "type": "string",
            "description": "Het e-mailadres van de Leerling. Het is niet gegarandeerd dat dit uniek is.",
            "example": "Teddy2008@email.com"
          },
          "mobielnummer": {
            "type": "string",
            "description": "Het mobiele telefoonnummer van de Leerling."
          },
          "telefoonnummer": {
            "type": "string",
            "description": "Het telefoonnummer van de leerling."
          },
          "adres": {
            "$ref": "#/components/schemas/Adres"
          },
          "verzorgers": {
            "description": "De ouders/verzogers van de leerling.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OuderVerzorgerReferentie",
              "description": "De identifier van de verzorger"
            }
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie",
            "description": "Altijd de Vestiging waarvoor de aanroep gedaan wordt."
          },
          "plaatsingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plaatsing"
            }
          },
          "lesgroepen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LesgroepReferentie"
            },
            "description": "De Lesgroepen waar de Leerling in zit of waar de Leerling gedurende een moment binnen het peilschooljaar zal zitten."
          },
          "vakkeuzes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vakkeuze"
            },
            "description": "De Vakken die de Leerling volgt of die de Leerling gedurende een moment binnen het peilschooljaar zal volgen."
          },
          "gebruikersnaam": {
            "type": "string",
            "description": "De gebruikersnaam (inlognaam) van het account van de Leerling."
          },
          "eduPersonRealId": {
            "type": "string",
            "description": "Kennisnet identifier"
          },
          "parnassysLeerlingNummer": {
            "type": "integer",
            "format": "int64",
            "description": "Het leerlingnummer van deze leerling in ParnasSys, indien bekend."
          },
          "geboorteplaats": {
            "type": "string",
            "description": "Plaats waar volgens de school de leerling geboren is. Max. 100 chars lang."
          },
          "geboorteland": {
            "type": "string",
            "description": "Land waar volgens de school de leerling geboren is. Max 50 chars lang."
          },
          "wenstContactViaEMail": {
            "type": "boolean",
            "description": "of deze leerling via e-mail benaderd mag worden."
          },
          "BSN": {
            "type": "string"
          },
          "isActief": {
            "type": "boolean",
            "description": "of de leerling op het moment van uitleveren een lopende Plaatsing heeft."
          },
          "schoolVanHerkomstBrin": {
            "type": "string",
            "description": "BRIN van de vorige school van de leerling."
          },
          "schoolVanHerkomstNaam": {
            "type": "string",
            "description": "Naam van de vorige school van de leerling."
          },
          "adviesSchoolVanHerkomst": {
            "type": "string",
            "description": "beschrijft de onderwijssoort die de vorige school van de leerling aanbeveelt."
          },
          "onderwijsSinds": {
            "type": "string",
            "format": "date"
          },
          "debiteurGegevens": {
            "$ref": "#/components/schemas/DebiteurGegevens"
          },
          "telefoonnummer_geheim": {
            "type": "boolean",
            "description": "Of het telefoonnummer een geheim nummer is"
          },
          "adres_geheim": {
            "type": "boolean",
            "description": "Of het adres geheim is"
          }
        }
      },
      "OuderVerzorgerReferentie": {
        "type": "object",
        "description": "Een Leerling heeft één of meer ouders en/of verzorgers.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "volgnummer": {
            "type": "integer",
            "description": "Waar deze OuderVerzorger zich bevindt in de volgorde van aanspreekpunten met betrekking tot deze Leerling. Volgnummer 1 is het eerste aanspreekpunt.",
            "example": 1
          }
        }
      },
      "Plaatsing": {
        "type": "object",
        "description": "Een Plaatsing geeft aan welk onderwijs een Leerling op een bepaalde Vestiging van de school volgt.\nEen Leerling kan op één moment maar één actieve (actuele) Plaatsing hebben, maar over tijd kan de Leerling meerdere Plaatsingen hebben doordat de Leerling bijvoorbeeld van Opleiding wisselt.\nEen Leerling krijgt in de regel ieder schooljaar een nieuwe Plaatsing.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "schooljaar": {
            "type": "string",
            "description": "Het schooljaar waarbinnen deze Plaatsing valt.\nDit is in principe ook uit de begin- en einddatum van de Plaatsing af te leiden, maar omdat het concept schooljaar een onderwijskundige betekenis heeft hebben we het voor het gemak toch toegevoegd.",
            "example": "2021/2022"
          },
          "startdatum": {
            "type": "string",
            "format": "date",
            "description": "De datum vanaf wanneer deze Plaatsing actueel is. Vóór deze datum is de Plaatsing niet geldig, maar op deze datum wel.\nIn het format YYYY-MM-DD.",
            "example": "2021-08-01"
          },
          "einddatum": {
            "type": "string",
            "format": "date",
            "description": "De datum tot wanneer deze Plaatsing actueel is. Na deze datum is de Plaatsing niet geldig, maar op deze datum wel.\nIn het format YYYY-MM-DD.",
            "example": "2022-07-31"
          },
          "leerjaar": {
            "type": "integer",
            "description": "Het leerjaar (1 - 6) waarin de Leerling zit tijdens de geldigheid van deze Plaatsing.\nDit is het leerjaar van de Opleiding en heeft in principe geen betrekking op het op hoger niveau volgen of eerder examen afleggen voor bepaalde Vakken.",
            "example": 5
          },
          "opleiding": {
            "$ref": "#/components/schemas/Opleiding",
            "description": "De Opleiding die de Leerling volgt gedurende de looptijd van deze Plaatsing."
          },
          "stamgroep": {
            "$ref": "#/components/schemas/Stamgroep",
            "description": "De Stamgroep waar de Leerling in geplaatst is gedurende de looptijd van deze Plaatsing."
          },
          "mentoren": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mentor"
            },
            "description": "Referenties naar de Medewerkers die gedurende de looptijd van deze Plaatsing als Mentor op kunnen treden voor de Leerling."
          },
          "digiDeliveryId": {
            "type": "string",
            "description": "Het digiDeliveryId van de Vestiging waar de Leerling gedurende deze Plaatsing op zit."
          },
          "opleidingskenmerken": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "De opleidingskenmerken van deze Plaatsing."
          }
        }
      },
      "DebiteurGegevens": {
        "type": "object",
        "description": "Debiteurgegevens van een leerling. Als een ouder of verzorger voor de leerling betaalt is er een referentie naar de OuderVerzorger.",
        "properties": {
          "externDebiteurnummer": {
            "type": "string",
            "description": "debiteurnummer. Max 50 chars."
          },
          "iban": {
            "type": "string",
            "description": "IBAN nummer. Max 34 chars."
          },
          "bicNummer": {
            "type": "string",
            "description": "BIC nummer. Max 11 chars."
          },
          "tenaamstelling": {
            "type": "string",
            "description": "max 100 chars."
          },
          "adres": {
            "$ref": "#/components/schemas/Adres"
          },
          "ouderVerzorgerUUID": {
            "type": "string",
            "format": "uuid",
            "description": "Als dit UUID gevuld is, is dat het UUID van de OuderVerzorger die debiteur is voor de leerling. Anders is de leerling zelf debiteur."
          }
        }
      },
      "Mentor": {
        "type": "object",
        "description": "Een referentie naar de Medewerker die als Mentor optreedt voor een Leerling.\nIn Somtoday kan een Leerling meerdere Mentoren toegewezen krijgen op verschillende niveaus.\nDe Stamgroep waar de Leerling in geplaatst is kan bijvoorbeeld één of twee mentoren hebben (de eerste en de tweede Mentor).\nDe Leerling kan ook via zijn of haar Plaatsing direct een Mentor toegewezen krijgen.\nWe hebben ervoor gekozen de Mentoren van de Leerling allemaal aan de Plaatsing te koppelen (ten koste van wat duplicatie) zodat clients ze makkelijk kunnen vinden.\nOm toch onderscheid te kunnen maken tussen de verschillende manieren waarop de Leerling een mentor toegewezen heeft gekregen heeft de Mentor een enum toewijzing.",
        "properties": {
          "medewerker_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de Medewerker die als Mentor op kan treden voor de Leerling."
          },
          "toewijzing": {
            "type": "string",
            "enum": [
              "Plaatsing",
              "EersteMentorStamgroep",
              "TweedeMentorStamgroep"
            ]
          }
        }
      },
      "Stamgroep": {
        "type": "object",
        "description": "Een groep leerlingen, maar niet aan een specifiek vak gebonden. \nIedere Leerling heeft een Stamgroep via zijn of haar Plaatsing. Dat houdt in dat de Stamgroep bijvoorbeeld kan wijzigen wanneer een Leerling overstapt van één Opleiding naar een andere.\nDe onderwijskundige betekenis van de Stamgroep is iets dat kan verschillen van school tot school maar moet waarschijnlijk gezocht worden in de richting van gemeenschappelijke mentorlessen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Het UUID van de stamgroep."
          },
          "omschrijving": {
            "type": "string",
            "description": "De omschrijving van de Stamgroep.",
            "example": "Groep Havo 4 D"
          },
          "leerjaar": {
            "type": "integer"
          },
          "onderwijssoort": {
            "type": "string"
          },
          "naam": {
            "type": "string",
            "example": "H4D"
          },
          "leerlingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeerlingVestiging"
            },
            "description": "Lijst van verwijzingen naar de Leerlingen in deze Stamgroep waar de client rechten op heeft. Niet gevuld als stamgroep via Plaatsing wordt uitgeleverd."
          },
          "mentoren": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mentor"
            }
          }
        }
      },
      "Opleiding": {
        "type": "object",
        "description": "Iedere Vestiging kan zijn eigen Opleidingen inrichten, dit zijn weerspiegelingen van landelijk voorgeschreven opleidingen, maar met een door de Vestiging verzonnen naam en afkorting.\nEen Vestiging kan bijvoorbeeld een Opleiding inrichten voor HAVO-NG, die er dan zo uit kan zien: ```{\n    \"afkorting\": \"HAVO-NG\",\n    \"naam\": \"HAVO-NG\",\n    \"code\": \"0351\"\n} ```\nMaar het kan ook exotischer: ```{\n    \"afkorting\": \"GL-ZW-ISP\"\n    \"naam\": \"Gemengde Leerweg ZW-ISP\"\n    \"code\": \"2741\"\n} ```\n",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "afkorting": {
            "type": "string",
            "description": "De afkorting van de Opleiding. Deze kan voor een specifieke landelijke opleiding verschillen van Vestiging tot Vestiging."
          },
          "naam": {
            "type": "string",
            "description": "De naam van de Opleiding. Deze kan voor een specifieke landelijke opleiding verschillen van Vestiging tot Vestiging."
          },
          "code": {
            "type": "string",
            "description": "Landelijke code van deze Opleiding. Deze zal voor dezelfde Opleiding op verschillende Vestigingen gelijk zijn."
          },
          "landelijke_naam": {
            "type": "string",
            "description": "Landelijke naam van deze Opleiding. Deze zal voor dezelfde Opleiding op verschillende Vestigingnen gelijk zijn."
          },
          "profielafkorting": {
            "type": "string",
            "description": "De afkorting van het profiel van deze Opleiding."
          },
          "profielnaam": {
            "type": "string",
            "description": "De naam van het profiel van deze Opleiding."
          },
          "leerjaren": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Leerjaren waarin deze Opleiding aangeboden wordt."
          },
          "vanafschooljaar": {
            "type": "string",
            "description": "De naam van ingang schooljaar."
          },
          "totschooljaar": {
            "type": "string",
            "description": "De naam van tot schooljaar."
          }
        }
      },
      "Medewerker": {
        "type": "object",
        "description": "Een Medewerker kan in principe iedere Medewerker van de Instelling zijn, maar in de praktijk zullen alleen Medewerkers met een onderwijskundige taak, zoals docenten of mentoren, terugkomen.\nEen Medewerker kan aan meerdere Vestigingen verbonden zijn en is dus uniek op Instellingsniveau.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "eckid": {
            "type": "string",
            "description": "Het ECK-ID van de Medewerker."
          },
          "bsn": {
            "type": "string",
            "description": "Het Burgerservicenummer van de Medewerker."
          },
          "roepnaam": {
            "type": "string",
            "description": "De roepnaam van de Medewerker. Er is voor de Medewerker geen apart veld voor de volledige voornamen.",
            "example": "Sheryll"
          },
          "voorletters": {
            "type": "string",
            "description": "De voorletters van de voornamen van de Medewerker.",
            "example": "SH"
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de Medewerker.",
            "example": "den"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de Medewerker.",
            "example": "Draaier"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "ONBEKEND",
              "MAN",
              "VROUW"
            ],
            "description": "Het geslacht van de Medewerker."
          },
          "geboortedatum": {
            "type": "string",
            "format": "date",
            "description": "De geboortedatum van de Medewerker, in het format YYYY-MM-DD.",
            "example": "1987-02-08"
          },
          "adres": {
            "$ref": "#/components/schemas/Adres",
            "description": "De adresgegevens van de Medewerker."
          },
          "emailadres": {
            "type": "string",
            "description": "Het e-mailadres van de Medewerker. Het is niet gegarandeerd dat dit uniek is."
          },
          "werk_telefoonnummer": {
            "type": "string",
            "description": "Het werktelefoonnummer van de Medewerker."
          },
          "prive_telefoonnummer": {
            "type": "string",
            "description": "Het privételefoonnummer van de Medewerker."
          },
          "medewerkernummer": {
            "type": "string",
            "description": "Het medewerkernummer begint altijd met Medewerker.",
            "example": "Medewerker 51326"
          },
          "afkorting": {
            "type": "string",
            "description": "De afkorting van de Medewerker zoals de school die heeft bepaald.",
            "example": "DRS"
          },
          "lesgroepen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LesgroepReferentie"
            },
            "description": "De Lesgroepen waar deze Medewerker docent van is."
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie",
            "description": "De Vestiging waar de aanroep voor gedaan wordt."
          },
          "hoofdvestiging": {
            "$ref": "#/components/schemas/VestigingReferentie",
            "description": "Een Medewerker heeft meerdere Vestigingen maar er is altijd één de hoofdvestiging van de Medewerker. Dit kan een Vestiging zijn waar de client geen autorisatie voor heeft."
          },
          "is_docent": {
            "type": "boolean",
            "description": "Of de Medewerker aan een Lesgroep gekoppeld is."
          },
          "functie": {
            "type": "string",
            "description": "De functie van de Medewerker.\nDit is een door de Instelling vastgestelde waarde. Twee Medewerkers met hetzelfde takenpakket op twee verschillende Instellingen zouden dus totaal verschillende waarden voor Functie kunnen hebben."
          },
          "gebruikersnaam": {
            "type": "string",
            "description": "De gebruikersnaam (inlognaam) van het account van de Medewerker."
          },
          "externnummer": {
            "type": "integer",
            "format": "int64",
            "description": "Het externe medewerkernummer; is niet altijd uniek."
          },
          "eduPersonRealId": {
            "type": "string",
            "description": "Kennisnet identifier"
          },
          "datum_in_dienst": {
            "type": "string",
            "format": "date"
          },
          "datum_uit_dienst": {
            "type": "string",
            "format": "date"
          },
          "reden_uit_dienst": {
            "type": "string"
          },
          "privetelefoonnummer_geheim": {
            "type": "boolean",
            "description": "Of het privetelefoonnummer een geheim nummer is"
          },
          "adres_geheim": {
            "type": "boolean",
            "description": "Of het adres geheim is"
          }
        }
      },
      "Pasfoto": {
        "type": "object",
        "description": "Een object om een pasfoto en het UUID van een Medewerker of Leerling aan elkaar te relateren.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de Medewerker of Leerling waar de pasfoto bij hoort"
          },
          "bestand": {
            "type": "string",
            "format": "byte",
            "description": "Binaire inhoud van het pasfoto bestand, Base-64 encoded."
          }
        }
      },
      "Lesgroep": {
        "type": "object",
        "description": "Een Lesgroep is in principe alleen een groepering van Leerlingen, het is niet gegarandeerd dat een Lesgroep ook aan een specifiek Vak gekoppeld is.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string",
            "example": "h4bBIO"
          },
          "leerlingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeerlingVestiging"
            },
            "description": "Lijst van verwijzingen naar de Leerlingen in deze Lesgroep waar de client rechten op heeft."
          },
          "docenten": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Lijst van de UUIDs van alle Medewerkers die docent van deze Lesgroep zijn.             Een Lesgroep kan meerdere docenten hebben, de volgorde waarin hun UUIDs in deze lijst voorkomen heeft geen betekenis."
          },
          "vak": {
            "type": "string",
            "description": "De afkorting van het Vak van de Lesgroep. Kan leeg zijn en Vestigingen bepalen zelf de waarde van deze afkorting, dus hetzelfde vak kan op verschillende Vestigingen verschillende afkortingen hebben.          example: bio"
          },
          "vaknaam": {
            "type": "string",
            "description": "naam van het vak",
            "example": "Biologie"
          },
          "landelijke_vakcode": {
            "type": "string",
            "description": "Kan leeg zijn als de Lesgroep geen Vak heeft of als het Vak niet aan een Landelijk Vak gekoppeld is.",
            "example": 191
          },
          "vakuuid": {
            "type": "string",
            "format": "uuid",
            "description": "Het UUID van het door de Vestiging ingerichte Vak waar deze Lesgroep aan gekoppeld is."
          },
          "vakkeuzes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vakkeuze"
            },
            "description": "De vakkeuzes van de Leerlingen van deze Lesgroep die refereren naar het Vak van deze Lesgroep.\nAan de hand hiervan kunnen clients achterhalen of Leerlingen het Vak van de Lesgroep op een hoger niveau volgen (en bijvoorbeeld eigenlijk in een lager leerjaar zitten dan de andere Leerlingen van de Lesgroep)"
          },
          "leerjaar": {
            "type": "integer",
            "description": "Het leerjaar van deze Lesgroep.\nLeerlingen in een Lesgroep kunnen vakken ook op een ander niveau volgen, wat inhoudt dat die Leerlingen een Plaatsing met een ander leerjaar hebben dan het leerjaar van de Lesgroep.\nClients kunnen de samenstelling van de Lesgroep wat leerjaren betreft onderzoeken door naar de Vakkeuzes te kijken.",
            "example": 4
          },
          "schooljaar": {
            "type": "string",
            "description": "Het schooljaar waarvoor deze Lesgroep geldig is. Lesgroepen zijn maar één schooljaar geldig.",
            "example": "2021/2022"
          },
          "onderwijssoort": {
            "type": "string",
            "description": "De naam van de landelijke onderwijssoort waar de Lesgroep voor bedoeld is.",
            "example": "HAVO-TT"
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie",
            "description": "De Vestiging waar de Lesgroep onder valt. Een Lesgroep heeft altijd maar één Vestiging."
          }
        }
      },
      "LesgroepReferentie": {
        "type": "object",
        "description": "Een verwijzing naar een Lesgroep met het uuid en de naam van de Lesgroep.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string",
            "example": "h4bBIO"
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie"
          }
        }
      },
      "VestigingReferentie": {
        "type": "object",
        "description": "Een referentie naar een Vestiging met het uuid en de naam van de Vestiging erbij.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string"
          }
        }
      },
      "Vak": {
        "type": "object",
        "description": "Vak dat gegeven wordt op een bepaalde Vestiging",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van het Vak"
          },
          "afkorting": {
            "type": "string",
            "description": "Afkorting van dit vak. Max. 15 chars."
          },
          "naam": {
            "type": "string",
            "description": "Door de Vestiging bepaalde naam voor dit vak. Max. 75 chars."
          }
        }
      },
      "Vakkeuze": {
        "type": "object",
        "description": "Leerlingen volgen bepaalde vakken gedurende een bepaald deel van hun schoolloopbaan.\nMeestal is een Vak geldig voor één specifiek leerjaar (bijvoorbeeld HAVO 3 Biologie) en heeft de Leerling dus voor hetzelfde Vak ieder schooljaar een nieuwe Vakkeuze.\nDe Vakken waarnaar gerefereerd worden zijn door de Vestiging zelf ingerichte Vakken en hoewel het vaak afspiegelingen van landelijk voorgeschreven vakken zullen zijn, hoeven ze niet algemeen bekend te zijn. Vestigingen kunnen ook eigen namen voor de Vakken verzinnen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Het UUID van de Vakkeuze."
          },
          "begindatum": {
            "type": "string",
            "format": "date",
            "description": "De begindatum van de Vakkeuze. De Vakkeuze is niet geldig voor deze datum, maar wel op deze datum. In het format YYYY-MM-DD.",
            "example": "2021-08-01"
          },
          "einddatum": {
            "type": "string",
            "format": "date",
            "description": "De einddatum van de Vakkeuze. De Vakkeuze is niet geldig na deze datum, maar wel op deze datum. In het format YYYY-MM-DD.",
            "example": "2021-07-31"
          },
          "landelijke_vakcode": {
            "type": "string",
            "description": "Als het Vak van de Vakkeuze gekoppeld is aan een landelijk voorgeschreven vak, is dit de vakcode van het landelijke vak.",
            "example": 191
          },
          "landelijke_vaknaam": {
            "type": "string",
            "description": "Als het Vak van de Vakkeuze gekoppeld is aan een landelijk voorgeschreven vak, is dit de naam van het landelijke vak.",
            "example": "Nederlandse taal en literatuur"
          },
          "school_vaknaam": {
            "type": "string",
            "description": "De naam van het Vak van deze Vakkeuze. Deze kan per vestiging verschillend zijn.",
            "example": "Nederlandse taal en literatuur"
          },
          "school_vakafkorting": {
            "type": "string",
            "description": "De afkorting van het Vak van deze Vakkeuze. Deze kan per vestiging verschillend zijn.",
            "example": "NL"
          },
          "niveau": {
            "type": "string",
            "description": "Het niveau is een combinatie van de landelijke Onderwijssoort en het leerjaar van een Vakkeuze.\nAan de hand hiervan kan men zien of een Leerling een Vak op een ander niveau volgt dan wat bijvoorbeeld uit het leerjaar van de Plaatsing zou blijken.\nEen Leerling die Tweetalig Havo volgt en in leerjaar 4 zit zou bijvoorbeeld het vak biologie op hoger niveau kunnen volgen, wat niveau HAVO-TT 5 op zou kunnen leveren.",
            "example": "HAVO-TT 5"
          },
          "leerjaar": {
            "type": "integer",
            "description": "Het leerjaar van het niveau waarop de Leerling het Vak van deze Vakkeuze volgt.\nAan de hand hiervan kan men ook zien of een Leerling een Vak op een ander niveau volgt dan wat bijvoorbeeld uit het leerjaar van de Plaatsing zou blijken. Dit is echter voor sommige clients makkelijker te interpreteren wanneer ze de landelijke Onderwijssoort niet nodig hebben.",
            "example": 5
          },
          "onderwijssoort": {
            "type": "string",
            "description": "Landelijke Onderwijssoort waarvoor deze Vakkeuze geldt.",
            "example": "HAVO-TT"
          },
          "opleiding": {
            "type": "string",
            "description": "Naam van de opleiding. Deze kan per vestiging verschillend zijn.",
            "example": "Praktijkonderwijs"
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie"
          }
        }
      },
      "OuderVerzorger": {
        "type": "object",
        "description": "Een ouder of verzorger van een Leerling. \nÉén OuderVerzorger kan te relateren zijn aan meer dan één Leerling.\nEen OuderVerzorger is in principe uniek binnen de Instelling, dus twee Leerlingen met dezelfde ouders die op verschillende Vestigingen zitten, zullen gekoppeld zijn aan dezelfde OuderVerzorgers.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "MAN",
              "VROUW",
              "ONBEKEND"
            ],
            "description": "Het geslacht van de OuderVerzorger."
          },
          "voorletters": {
            "type": "string",
            "description": "De voorletters van de voornamen van de OuderVerzorger.",
            "example": "FB"
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de OuderVerzorger.",
            "example": "van"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de OuderVerzorger.",
            "example": "Wobbelbroeck"
          },
          "gebruikersnaam": {
            "type": "string",
            "description": "De gebruikersnaam (inlognaam) van het account van de OuderVerzorger."
          },
          "emailadres": {
            "type": "string",
            "example": "fbvanwobbelbroeck@email.com",
            "description": "e-mailadres van de ouderVerzorger. Het is niet gegarandeerd dat dit uniek is."
          },
          "telefoonnummer": {
            "type": "string",
            "description": "het (huis)telefoonnummer, mobiel nummer of werknummer van de ouder/verzorger, afhankelijk van welke bekend is."
          },
          "adres": {
            "$ref": "#/components/schemas/Adres"
          },
          "leerlingen_van_vestiging": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "De UUIDs van de Leerlingen op deze Vestiging van wie dit een ouder/verzorger is. Deze Vestiging is in deze context de Vestiging waarvoor het request gedaan wordt."
          },
          "relatie_tot_leerlingen": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeerlingReferentie"
            }
          },
          "wenstContactViaEMail": {
            "type": "boolean",
            "description": "of deze ouder of verzorger via e-mail benaderd mag worden."
          },
          "uitgebreidTelefoonnummer": {
            "type": "string",
            "description": "(huis)telefoonnummer, maar zonder fallback naar andere telefoonnummers als deze leeg is."
          },
          "uitgebreidMobielNummer": {
            "type": "string",
            "description": "mobiel telefoonnummer, maar zonder fallback naar andere telefoonnummers als deze leeg is."
          },
          "uitgebreidMobielWerkNummer": {
            "type": "string",
            "description": "werk telefoonnummer, maar zonder fallback naar andere telefoonnummers als deze leeg is."
          },
          "telefoonnummer_geheim": {
            "type": "boolean",
            "description": "Of het telefoonnummer een geheim nummer is"
          },
          "mobielwerknummer_geheim": {
            "type": "boolean",
            "description": "Of het mobielwerknummer een geheim nummer is"
          },
          "adres_geheim": {
            "type": "boolean",
            "description": "Of het adres geheim is"
          }
        }
      },
      "LeerlingVestiging": {
        "type": "object",
        "description": "Het UUID van een leerling en de Vestiging waar je die leerling kan vinden.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "vestiging": {
            "$ref": "#/components/schemas/VestigingReferentie"
          }
        }
      },
      "LeerlingReferentie": {
        "type": "object",
        "description": "Leerlingen op deze Vestiging van wie dit een ouder/verzorger is. Deze Vestiging is in deze context de Vestiging waarvoor het request gedaan wordt.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "relatiesoort": {
            "type": "string"
          },
          "ouderlijk_gezag": {
            "type": "boolean"
          },
          "mag_post_ontvangen": {
            "type": "boolean"
          }
        }
      },
      "Rooster": {
        "type": "object",
        "properties": {
          "weeknummer": {
            "type": "integer"
          },
          "begindatum": {
            "type": "string",
            "format": "date",
            "description": "Begindatum van de week waar het rooster voor geldt, voor controledoeleinden."
          },
          "einddatum": {
            "type": "string",
            "format": "date",
            "description": "Einddatum van de week waar het rooster voor geldt, voor controledoeleinden."
          },
          "afspraken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Afspraak"
            }
          }
        }
      },
      "Afspraak": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "titel": {
            "type": "string",
            "description": "max 100 chars."
          },
          "vak": {
            "$ref": "#/components/schemas/VakReferentie"
          },
          "omschrijving": {
            "type": "string",
            "description": "Rich Text, geen limiet op lengte."
          },
          "afspraaktype": {
            "type": "string",
            "description": "max 30 chars."
          },
          "begintijd": {
            "type": "string",
            "format": "date-time"
          },
          "eindtijd": {
            "type": "string",
            "format": "date-time"
          },
          "locatie": {
            "type": "string",
            "description": "omschrijving van waar de afspraak plaatsvindt. Bijvoorbeeld 'Vestiging Veldmuisweg - Lokaal 3.14' Max 100 chars."
          },
          "lesuren": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "een array van de lesuren waar deze afpraak onder valt. Niet iedere school gebruikt lesuren."
          },
          "externId": {
            "type": "string",
            "description": "id van de afspraak zoals het bekend is bij externe systemen zoals roosterpakketten. Max. 500 chars. Kan leeg zijn."
          },
          "medewerkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MedewerkerReferentie"
            }
          }
        }
      },
      "VakReferentie": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "naam": {
            "type": "string",
            "description": "Max 75 chars."
          }
        }
      },
      "MedewerkerReferentie": {
        "type": "object",
        "description": "Verkorte vorm van het Medewerker object als referentie. Velden worden gevuld aan de hand van de rechten van de client, maar uuid en afkorting zijn altijd gevuld.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "afkorting": {
            "type": "string",
            "description": "Afkorting van de medewerker, max 10 chars."
          },
          "roepnaam": {
            "type": "string",
            "description": "De roepnaam van de Medewerker. Er is voor de Medewerker geen apart veld voor de volledige voornamen.",
            "example": "Sheryll"
          },
          "voorletters": {
            "type": "string",
            "description": "De voorletters van de voornamen van de Medewerker.",
            "example": "SH"
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de Medewerker.",
            "example": "den"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de Medewerker.",
            "example": "Draaier"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "ONBEKEND",
              "MAN",
              "VROUW"
            ],
            "description": "Het geslacht van de Medewerker."
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "Een gebeurtenis die ervoor kan zorgen dat de gegevens die een call naar een bepaald endpoint oplevert veranderen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor deze event."
          },
          "entiteit_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor de gewijzigde entiteit. Deze kan je gebruiken om specifiek die entiteit op te halen uit het relevante endpoint."
          },
          "event_categorie": {
            "type": "string",
            "description": "Om wat voor entiteit het gaat (bijvoorbeeld Leerling, Lesgroep, Medewerker, enz.)"
          },
          "event_aard": {
            "type": "string",
            "description": "Omschrijft wat er met de entiteit is gebeurd (Created, Updated of Deleted)"
          },
          "eventDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Moment waarop de event is geregistreerd, in het format YYYY-MM-DD'T'HH:mm:ss.SSSSSS+/-HH:mm",
            "example": "2021-03-23T08:27:39.936374+01:00"
          },
          "index": {
            "type": "integer",
            "format": "int64",
            "description": "Getal dat de volgorde van events aangeeft. Kan gebruikt worden om bijvoorbeeld alle events na een laatst ontvangen event op te vragen."
          },
          "url": {
            "type": "string",
            "description": "Url die aangeroepen moet worden om het object waar de event over gaat op te vragen."
          }
        }
      },
      "Account": {
        "type": "object",
        "description": "Een somtoday-account van een leerling of een medewerker",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de Leerling of Medewerker waar de Account aan gekoppeld is."
          },
          "usertype": {
            "type": "string",
            "enum": [
              "LEERLING",
              "MEDEWERKER",
              "VERZORGER"
            ]
          },
          "remoteidentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RemoteUserIdentifier"
            }
          },
          "gebruikersnaam": {
            "type": "string",
            "description": "De gebruikersnaam van het account"
          },
          "emailadres": {
            "type": "string",
            "description": "Het emailadres van de gebruiker. Het is niet gegarandeerd dat dit uniek is."
          },
          "subject": {
            "description": "subject claim van de Account.",
            "type": "string"
          },
          "account-uuid": {
            "description": "UUID van de Account zelf.",
            "type": "string",
            "format": "uuid"
          },
          "rollen": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "De rollen van het account."
          }
        }
      },
      "AccountInput": {
        "type": "object",
        "description": "Een somtoday-account van een leerling of een medewerker",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de Leerling, Medewerker of OuderVerzorger waar de Account aan gekoppeld is/wordt."
          },
          "remoteidentifier": {
            "$ref": "#/components/schemas/RemoteUserIdentifier"
          },
          "gebruikersnaam": {
            "type": "string",
            "description": "De gebruikersnaam van het account"
          },
          "emailadres": {
            "type": "string",
            "description": "Het emailadres van de gebruiker, dat is een leerling, verzorger of medewerker"
          }
        }
      },
      "InvalidAccountInput": {
        "type": "object",
        "description": "Ongeldige input voor het aanmaken van een account, zie de errors om te zien waar de input niet aan voldoet.",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/AccountInput"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AccountPermissies": {
        "type": "object",
        "description": "Object dat beschrijft voor welke velden van een Account de Koppelpartij bij deze school recht heeft.",
        "properties": {
          "uuid": {
            "type": "boolean"
          },
          "usertype": {
            "type": "boolean"
          },
          "remoteidentifiers": {
            "type": "boolean"
          },
          "gebruikersnaam": {
            "type": "boolean"
          },
          "emailadres": {
            "type": "boolean"
          },
          "subject": {
            "type": "boolean"
          },
          "account-uuid": {
            "type": "boolean"
          },
          "rollen": {
            "type": "boolean"
          }
        }
      },
      "AccountResponse": {
        "type": "object",
        "description": "Het response-object voor het account-endpoint",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "veldpermissies": {
            "$ref": "#/components/schemas/AccountPermissies"
          }
        }
      },
      "RemoteUserIdentifier": {
        "type": "object",
        "properties": {
          "providerType": {
            "type": "string",
            "enum": [
              "AZURE",
              "GOOGLE",
              "OIDC"
            ]
          },
          "domain": {
            "description": "Aan de hand van het domain kan worden bepaald welke OIDC configuratie moet worden gebruikt voor de remote user identifier.\nEr wordt geen nieuwe OIDC configuratie aangemaakt als er geen OIDC configuratie bestaat met het opgegeven domain.",
            "type": "string"
          },
          "identifier": {
            "type": "string"
          }
        }
      },
      "Huiswerk": {
        "type": "object",
        "description": "Huiswerk dat aan de leerling is opgegeven. Als het huiswerk dezelfde begin- en einddatum heeft wordt het in de ELO als één item getoond op die datum. Als het huiswerk verschillende begin- en einddatums heeft, is dat omdat het een inleveropdracht is met een inleverperiode die ingaat op de begindatum en afloopt op de einddatum, of omdat het huiswerk is dat voor een bepaalde week of weken is opgegeven.",
        "properties": {
          "onderwerp": {
            "type": "string",
            "description": "HTML string met omschrijving erin",
            "example": "<p>De verzamelde werken van Shakespeare</p>"
          },
          "omschrijving": {
            "type": "string",
            "example": "De culturele en taalkundige ontwikkelingen in 16e eeuws Engeland"
          },
          "huiswerktype": {
            "type": "string",
            "enum": [
              "LESSTOF",
              "HUISWERK",
              "TOETS",
              "GROTE_TOETS"
            ],
            "example": "HUISWERK"
          },
          "notitie": {
            "type": "string",
            "description": "html string met notitie erin",
            "example": "<p>Speciale aandacht voor MacBeth en Hamlet in de context van de discutabele troonsopvolging van Elizabeth I</p>"
          },
          "leerdoelen": {
            "type": "string",
            "description": "html string met leerdoelen erin",
            "example": "<p>De leerling kan een slimme repliek geven wanneer iemand Shakespeare citeert</p>"
          },
          "tijdsindicatie": {
            "type": "string",
            "example": "drie kwartier"
          },
          "huiswerkUUID": {
            "type": "string",
            "format": "uuid"
          },
          "begindatum": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-20T09:00:00Z+02:00"
          },
          "einddatum": {
            "type": "string",
            "format": "date-time",
            "example": "2022-09-24T14:40:00Z+02:00"
          },
          "inleveropdracht": {
            "type": "boolean",
            "example": true
          },
          "vaknaam": {
            "type": "string",
            "example": "Engelse taal en literatuur"
          },
          "lesgroepUUID": {
            "type": "string",
            "format": "uuid"
          },
          "externMateriaal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HuiswerkExternMateriaal"
            }
          },
          "heeftBijlages": {
            "type": "boolean"
          }
        }
      },
      "HuiswerkExternMateriaal": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "omschrijving": {
            "type": "string",
            "example": "Grappig Shakespeare gifje"
          },
          "uri": {
            "type": "string",
            "example": "https://media.giphy.com/media/l0G17l4pAspxD7fmo/giphy.gif"
          },
          "contentType": {
            "type": "string",
            "description": "het soort content dat men mag verwachten dat achter de URI zit.",
            "example": "image/gif"
          }
        }
      },
      "HuiswerkKlik": {
        "type": "object",
        "properties": {
          "leerlingUUID": {
            "type": "string",
            "format": "uuid"
          },
          "huiswerkUUID": {
            "type": "string",
            "format": "uuid"
          },
          "externMateriaalUUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Moment waarop de klik plaatsvond"
          }
        }
      },
      "HuiswerkBijlagenCallback": {
        "type": "object",
        "properties": {
          "callbackUrl": {
            "type": "string",
            "format": "uri"
          },
          "state": {
            "description": "De state die hier wordt opgegeven wordt versleuteld met de secret van de koppelpartij en het algoritme \"HmacSHA1\". De versleutelde waarde wordt in de callback meegestuurd en kan worden gebruikt om te verifiëren dat de callback afkomstig is van somtoday.",
            "type": "string"
          }
        },
        "required": [
          "callbackUrl",
          "state"
        ]
      },
      "HuiswerkBijlagen": {
        "type": "object",
        "properties": {
          "referentie": {
            "type": "string",
            "description": "Het huiswerkuuid dat als parameter is opgegeven."
          }
        },
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "bijlagen": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "description": "Als dit veld is gevuld dan zijn er geen bijlagen en is er iets fout gegaan bij het maken van het zipbestand.",
                "type": "string"
              }
            }
          }
        ]
      },
      "RCurriculum": {
        "type": "object",
        "properties": {
          "vak": {
            "type": "string",
            "description": "De elementcode van het vak waarvoor de toets gegeven wordt."
          },
          "niveau": {
            "type": "string",
            "description": "Niveau van het curriculum, ie, HAVO/VMBO-TL/VWO etc"
          },
          "leerjaar": {
            "type": "integer",
            "format": "int32",
            "description": "Leerjaar in alom bekende vorm : 1, 2, 3, 4, 5 of 6"
          }
        }
      },
      "RLeerlingResultaat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "toetsdeelnemerId": {
            "type": "string",
            "format": "uuid",
            "description": "Het uuid van de leerling die dit resultaat behaalde. Let op, het toetsdeelnemerId of het toetsdeelnemerEckId dient gevuld te zijn. Voorkeur gaat uit naar toetsdeelnemerId."
          },
          "toetsdeelnemerEckId": {
            "type": "string",
            "description": "Het ECKiD van de leerling die dit resultaat behaalde. Let op, het toetsdeelnemerId of het toetsdeelnemerEckId dient gevuld te zijn. Voorkeur gaat uit naar toetsdeelnemerId."
          },
          "toetsAfnameId": {
            "type": "string",
            "description": "Het id van de toetsafname die dit resultaat betreft"
          },
          "resultaat": {
            "type": "string",
            "description": "Het daadwerkelijk behaalde resultaat, cijfer of text"
          }
        }
      },
      "RFormatiefLeerlingResultaat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "toetsdeelnemerId": {
            "type": "string",
            "format": "uuid",
            "description": "Het uuid van de leerling die dit resultaat behaalde. Let op, het toetsdeelnemerId of het toetsdeelnemerEckId dient gevuld te zijn. Voorkeur gaat uit naar toetsdeelnemerId."
          },
          "toetsdeelnemerEckId": {
            "type": "string",
            "description": "Het ECKiD van de leerling die dit resultaat behaalde. Let op, het toetsdeelnemerId of het toetsdeelnemerEckId dient gevuld te zijn. Voorkeur gaat uit naar toetsdeelnemerId."
          },
          "toetsAfnameId": {
            "type": "string",
            "description": "Het id van de toetsafname die dit resultaat betreft"
          },
          "resultaat": {
            "type": "string",
            "description": "Het daadwerkelijk behaalde resultaat, cijfer of text. Maximaal 1023 tekens lang."
          },
          "formatiefResultaatType": {
            "type": "string",
            "description": "Het type resultaat, percentage, aantal goed, vrije text, gvo etc",
            "enum": [
              "PERCENTAGE",
              "REFERENTIE_NIVEAU",
              "AANTAL_GOED",
              "CIJFER",
              "VRIJE_TEKST",
              "GVO"
            ]
          },
          "naam": {
            "type": "string",
            "description": "Mocht het resultaat een onderdeel betreffen, kan er optioneel een naam worden meegegeven om de interface te verduidelijken."
          },
          "parentResultaat": {
            "type": "string",
            "format": "uuid",
            "description": "Wanneer het formatieve resultaat een onderdeel is van een ander formatief resultaat, kan hier de uuid van het eerder ingeschoten resultaat worden meegegeven. Let op, er kan maar 1 subniveau worden gedefineerd."
          }
        }
      },
      "RLeerlingResultaatStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "toetsdeelnemerId": {
            "type": "string",
            "description": "Het id van de leerling die dit resultaat behaalde"
          },
          "toetsAfnameId": {
            "type": "string",
            "description": "Het id van de toetsafname die dit resultaat betreft"
          },
          "resultaatStatus": {
            "type": "boolean",
            "description": "Het resultaat is door een medewerker verwerkt in een resultaat in Somtoday en is beschikbaar voor de leerling"
          }
        }
      },
      "RNiveauResultaat": {
        "type": "object",
        "properties": {
          "resultaat": {
            "type": "string",
            "description": "Het daadwerkelijk behaalde resultaat, cijfer of text"
          },
          "niveau": {
            "type": "string",
            "description": "Niveau van het curriculum, ie, HAVO/VMBO-TL/VWO etc"
          }
        }
      },
      "RToets": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Leverancier toetsidentifier, bij voorkeur UUID, moet meegepost worden"
          },
          "naam": {
            "type": "string",
            "description": "Toetsnaam, zichtbaar in de interface"
          },
          "curriculum": {
            "$ref": "#/components/schemas/RCurriculum",
            "description": "Vak, leerjaar en niveau waarvoor de toets geldt"
          }
        }
      },
      "RToetsAfname": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Leverancieridentifier van deze ToetsAfname."
          },
          "afnameMoment": {
            "type": "string",
            "format": "date-time",
            "description": "Het moment waarop het resultaat is vastgesteld"
          },
          "medewerkerId": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de medewerker die de toets afneemt. Let op, medewerkerId of medewerkerEckId dient gevuld te zijn. Voorkeur gaat uit naar medewerkerId."
          },
          "medewerkerEckId": {
            "type": "string",
            "description": "ECKiD van de medewerker die de toets afneemt. Let op, medewerkerId of medewerkerEckId dient gevuld te zijn. Voorkeur gaat uit naar medewerkerId."
          },
          "resultaatType": {
            "type": "string",
            "description": "Het type resultaat, SUMMATIEF of FORMATIEF",
            "enum": [
              "SUMMATIEF",
              "FORMATIEF"
            ]
          },
          "toetsId": {
            "type": "string",
            "description": "Het id van de toets waar deze resultaten voor gelden. Stuur minimaal een toetsId of lesgroepId mee."
          },
          "lesgroepId": {
            "type": "string",
            "description": "Het id van de lesgroep waarvoor de resultaten gelden. Stuur minimaal een toetsId of lesgroepId mee."
          }
        }
      },
      "AanmeldVeld": {
        "type": "object",
        "description": "Een vrij veld wat gebruikt kan worden in de aanmelding van een leerling om extra gegevens mee te sturen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor het aanmeld veld."
          },
          "naam": {
            "type": "string",
            "description": "Omschrijvende naam van het veld.",
            "example": "Kleur haar"
          },
          "veld_type": {
            "type": "string",
            "enum": [
              "Aankruisvak",
              "Keuzelijst",
              "Lange tekst",
              "Vrije tekst",
              "Datum"
            ],
            "description": "Veld type. Mogelijke opties zijn: Aankruisvak, Keuzelijst, Lange tekst, Vrije tekst, Datum.",
            "example": "keuzelijst"
          },
          "waardes": {
            "type": "array",
            "description": "Optionele lijst met toegestane waardes. Alleen van toepassing bij veld_type keuzelijst.",
            "items": {
              "type": "string"
            },
            "example": [
              "bruin",
              "kaal",
              "blond"
            ]
          }
        }
      },
      "AanmeldVeldResponse": {
        "type": "object",
        "description": "Het response-object voor het aanmeldVeld-endpoint.",
        "properties": {
          "aanmeldvelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AanmeldVeld"
            }
          }
        }
      },
      "ToestemmingVeld": {
        "type": "object",
        "description": "Een vrij veld wat gebruikt kan worden in de aanmelding van een leerling om toestemmingen mee te sturen.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor het toestemming veld."
          },
          "naam": {
            "type": "string",
            "description": "Omschrijvende naam van het veld.",
            "example": "Facebook"
          },
          "veld_type": {
            "type": "string",
            "description": "Veld type. Mogelijke opties zijn: aankruisvak.",
            "example": "aankruisvak"
          },
          "omschrijving": {
            "type": "string",
            "description": "Uitgebreidere omschrijving van de toestemming.",
            "example": "Beeldmateriaal van de leerling mag gedeeld worden op de facebook pagina van de school."
          }
        }
      },
      "ToestemmingVeldResponse": {
        "type": "object",
        "description": "Het response-object voor het toestemming-endpoint.",
        "properties": {
          "toestemmingvelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToestemmingVeld"
            }
          }
        }
      },
      "Veld": {
        "type": "object",
        "description": "Een vrij veld dat voor meerdere functies gebruikt kan worden.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor het veld."
          },
          "naam": {
            "type": "string",
            "description": "Omschrijvende naam van het veld.",
            "example": "Kleur haar"
          },
          "veld_type": {
            "type": "string",
            "enum": [
              "Aankruisvak",
              "Keuzelijst",
              "Lange tekst",
              "Vrije tekst",
              "Datum"
            ],
            "description": "Veld type. Mogelijke opties zijn: Aankruisvak, Keuzelijst, Lange tekst, Vrije tekst, Datum.",
            "example": "keuzelijst"
          },
          "categorie": {
            "type": "string"
          },
          "waardes": {
            "type": "array",
            "description": "Optionele lijst met toegestane waardes. Alleen van toepassing bij veld_type keuzelijst.",
            "items": {
              "type": "string"
            },
            "example": [
              "bruin",
              "kaal",
              "blond"
            ]
          }
        }
      },
      "VeldResponse": {
        "type": "object",
        "description": "Het response-object voor het vrijveld catalogus endpoint.",
        "properties": {
          "aanmeldingvelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veld"
            }
          },
          "toestemmingvelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veld"
            }
          },
          "leerlingvelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veld"
            }
          },
          "verzorgervelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veld"
            }
          },
          "medewerkervelden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Veld"
            }
          }
        }
      },
      "VeldWaarde": {
        "type": "object",
        "description": "ingevulde waarde voor een veld uit het vrije velden endpoint.",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor het veld waarvoor dit de ingevulde waarde is."
          },
          "waarde": {
            "type": "string",
            "description": "waarde als het vrije veld van type Vrije tekst, Lange tekst, Datum of Keuzelijst is. Datums worden als YYYY-MM-DD geformat (conform ISO-8601)."
          },
          "aangekruist": {
            "type": "boolean",
            "description": "waarde als het vrije veld van type Aankruisvak is."
          },
          "categorie": {
            "type": "string"
          },
          "naam": {
            "type": "string"
          }
        }
      },
      "LeerlingVeldWaardes": {
        "type": "object",
        "description": "Lijst van vrije veldwaardes die horen bij een bepaalde leerling.",
        "properties": {
          "leerling_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de leerling waar deze lijst betrekking op heeft."
          },
          "waardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VeldWaarde"
            }
          }
        }
      },
      "LeerlingVeldWaardesResponse": {
        "type": "object",
        "properties": {
          "leerlingVeldWaardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeerlingVeldWaardes"
            }
          }
        }
      },
      "MedewerkerVeldWaardes": {
        "type": "object",
        "description": "Lijst van vrije veldwaardes die horen bij een bepaalde medewerker.",
        "properties": {
          "medewerker_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de medewerker waar deze lijst betrekking op heeft."
          },
          "waardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VeldWaarde"
            }
          }
        }
      },
      "MedewerkerVeldWaardesResponse": {
        "type": "object",
        "properties": {
          "medewerkerVeldWaardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MedewerkerVeldWaardes"
            }
          }
        }
      },
      "OuderVerzorgerVeldWaardes": {
        "type": "object",
        "description": "Lijst van vrije veldwaardes die horen bij een bepaalde ouder/verzorger.",
        "properties": {
          "ouderVerzorger_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID van de ouder/verzorger waar deze lijst betrekking op heeft."
          },
          "waardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VeldWaarde"
            }
          }
        }
      },
      "OuderVerzorgerVeldWaardesResponse": {
        "type": "object",
        "properties": {
          "ouderVerzorgerVeldWaardes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OuderVerzorgerVeldWaardes"
            }
          }
        }
      },
      "Aanmelding": {
        "type": "object",
        "description": "Relevante gegevens voor de aanmelding van een nieuwe leerling",
        "properties": {
          "leerling": {
            "$ref": "#/components/schemas/AanmeldingLeerling"
          },
          "school_van_herkomst_nederland": {
            "$ref": "#/components/schemas/AanmeldingSchoolVanHerkomstNederland"
          },
          "school_van_herkomst_buitenland": {
            "$ref": "#/components/schemas/AanmeldingSchoolVanHerkomstBuitenland"
          },
          "school_van_herkomst_onbekend": {
            "$ref": "#/components/schemas/AanmeldingSchoolVanHerkomstOnbekend"
          },
          "advies": {
            "$ref": "#/components/schemas/AanmeldingAdvies"
          },
          "plaatsing": {
            "$ref": "#/components/schemas/AanmeldingPlaatsing"
          },
          "verzorgers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AanmeldingVerzorger"
            }
          },
          "vrije_velden": {
            "type": "array",
            "description": "Optionele lijst met vrij velden voor de aanmelding.",
            "items": {
              "$ref": "#/components/schemas/AanmeldingVrijVeld"
            }
          },
          "toestemming": {
            "type": "array",
            "description": "Optionele lijst met toestemmingen bij de aanmelding.",
            "items": {
              "$ref": "#/components/schemas/AanmeldingToestemming"
            }
          }
        },
        "required": [
          "leerling",
          "verzorgers"
        ]
      },
      "AanmeldingReferentie": {
        "type": "object",
        "description": "De referentie van de aanmelding voor controle van de status en het versturen van extra gegevens voor de aanmelding of het ondertekenen van de aanmelding",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier voor de aanmelding."
          },
          "referentie": {
            "type": "string",
            "description": "Human readable referentie van de aanmelding voor het gebruik in de communicatie tussen aanmelder en school",
            "example": "1AB902Z2"
          }
        }
      },
      "AanmeldingLeerling": {
        "type": "object",
        "description": "Relevante gegevens van de leerling voor de aanmelding",
        "properties": {
          "voornamen": {
            "type": "string",
            "description": "De voornamen van de leerling.",
            "example": "Fred Arnold"
          },
          "roepnaam": {
            "type": "string",
            "description": "De roepnaam van de leerling.",
            "example": "Frits"
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de leerling.",
            "example": "van"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de leerling.",
            "example": "Wobbelbroeck"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "MAN",
              "VROUW",
              "ONBEKEND"
            ],
            "description": "Het geslacht van de leerling.",
            "example": "ONBEKEND"
          },
          "geboortedatum": {
            "type": "string",
            "format": "date",
            "description": "De geboortedatum van de leerling, in het format YYYY-MM-DD.",
            "example": "2008-02-08"
          },
          "geboorteplaats": {
            "type": "string",
            "description": "De geboorteplaats van de leerling",
            "example": "Amsterdam"
          },
          "geboorteland": {
            "type": "string",
            "description": "GBA landcode van het geboorteland van de leerling",
            "example": "6030"
          },
          "nationaliteit1": {
            "type": "string",
            "description": "GBA code van de eerste nationaliteit van de leerling",
            "example": "0001"
          },
          "nationaliteit2": {
            "type": "string",
            "description": "GBA code van de tweede nationaliteit van de leerling",
            "example": "0002"
          },
          "in_nederland_sinds": {
            "type": "string",
            "format": "date",
            "description": "De datum sinds wanneer de leerling in Nederland is, in het format YYYY-MM-DD.",
            "example": "2012-05-02"
          },
          "bsn": {
            "type": "string",
            "description": "Het Burgerservicenummer van de leerling.",
            "example": "286691176"
          },
          "onderwijsnummer": {
            "type": "string",
            "description": "Het onderwijsnummer van de leerling.",
            "example": "175859732"
          },
          "thuistaal1": {
            "type": "string",
            "description": "Eerste thuistaal van de leerling",
            "example": "Frans"
          },
          "thuistaal2": {
            "type": "string",
            "description": "Tweede thuistaal van de leerling",
            "example": "Nederlands"
          },
          "emailadres": {
            "type": "string",
            "description": "Het e-mailadres van de leerling",
            "example": "Teddy2008@email.com"
          },
          "mobielnummer": {
            "type": "string",
            "description": "Het mobiele telefoonnummer van de leerling",
            "example": "06-12345678"
          },
          "telefoonnummer": {
            "type": "string",
            "description": "Het telefoonnummer van de leerling",
            "example": "010-1234567"
          },
          "adres_nederland": {
            "description": "Adres in Nederland. Er moet in ieder geval of een Nederlands adres of een Buitenlands adres opgegeven worden",
            "$ref": "#/components/schemas/AdresNederland"
          },
          "adres_buitenland": {
            "description": "Adres in het buitenland. Er moet in ieder geval of een Nederlands adres of een Buitenlands adres opgegeven worden",
            "$ref": "#/components/schemas/AdresBuitenland"
          },
          "mobielnummer_geheim": {
            "type": "boolean",
            "description": "Of het mobiele nummer een geheim nummer is"
          },
          "telefoonnummer_geheim": {
            "type": "boolean",
            "description": "Of het telefoonnummer een geheim nummer is"
          },
          "contact_via_sms": {
            "type": "boolean",
            "description": "Of de school SMS berichten naar dit mobiele nummer mag versturen"
          },
          "contact_via_email": {
            "type": "boolean",
            "description": "Of de school E-mail berichten naar dit email adres mag versturen"
          },
          "iban": {
            "type": "string",
            "description": "Het IBAN van de leerling in het geval dat de leerling de factuurrelatie is.",
            "example": "NL67ABNA5515439724"
          },
          "opmerkingen_gezinssituatie": {
            "type": "string",
            "description": "De gezinssituatie van de leerling."
          }
        },
        "required": [
          "achternaam",
          "roepnaam",
          "geslacht",
          "geboortedatum",
          "geboorteplaats",
          "geboorteland",
          "nationaliteit1"
        ]
      },
      "AanmeldingVerzorger": {
        "type": "object",
        "description": "Relevante gegevens van de verzorger voor de aanmelding",
        "properties": {
          "voorletters": {
            "type": "string",
            "description": "De voorletters van de verzorger.",
            "example": "G.J."
          },
          "voorvoegsel": {
            "type": "string",
            "description": "Het voorvoegsel van de achternaam van de verzorger.",
            "example": "van"
          },
          "achternaam": {
            "type": "string",
            "description": "De achternaam van de verzorger.",
            "example": "Wobbelbroeck"
          },
          "geslacht": {
            "type": "string",
            "enum": [
              "MAN",
              "VROUW",
              "ONBEKEND"
            ],
            "description": "Het geslacht van de verzorger.",
            "example": "MAN"
          },
          "geboorteland": {
            "type": "string",
            "description": "GBA landcode van het geboorteland van de verzorger",
            "example": "6030"
          },
          "nationaliteit": {
            "type": "string",
            "description": "GBA code van de nationaliteit van de verzorger",
            "example": "0001"
          },
          "wettelijk_vertegenwoordiger": {
            "type": "boolean",
            "description": "Geeft aan of deze verzorger de wettelijk vertegenwoordiger van de leerling is"
          },
          "relatie_tot_leerling": {
            "type": "string",
            "description": "Relatie van de verzorger tot de leerling",
            "example": "Ouder"
          },
          "zelfde_adres_als_leerling": {
            "type": "boolean",
            "description": "Indien het adres hetzelfde is als die van de leerling dan kan deze aangevinkt worden en hoeft er geen apart adres voor de verzorger meegegeven te worden."
          },
          "emailadres": {
            "type": "string",
            "description": "Het e-mailadres van de verzorger",
            "example": "Wobbie1977@email.com"
          },
          "mobielnummer": {
            "type": "string",
            "description": "Het mobiele telefoonnummer van de verzorger.",
            "example": "06-12345678"
          },
          "telefoonnummer": {
            "type": "string",
            "description": "Het telefoonnummer van de verzorger.",
            "example": "010-1234567"
          },
          "adres_nederland": {
            "description": "Adres in Nederland. Er moet in ieder geval of een Nederlands adres of een Buitenlands adres opgegeven worden",
            "$ref": "#/components/schemas/AdresNederland"
          },
          "adres_buitenland": {
            "description": "Adres in het buitenland. Er moet in ieder geval of een Nederlands adres of een Buitenlands adres opgegeven worden",
            "$ref": "#/components/schemas/AdresBuitenland"
          },
          "mobielnummer_geheim": {
            "type": "boolean",
            "description": "Of het mobiele nummer een geheim nummer is"
          },
          "telefoonnummer_geheim": {
            "type": "boolean",
            "description": "Of het telefoonnummer een geheim nummer is"
          },
          "contact_via_sms": {
            "type": "boolean",
            "description": "Of de school SMS berichten naar dit mobiele nummer mag versturen"
          },
          "contact_via_email": {
            "type": "boolean",
            "description": "Of de school E-mail berichten naar dit email adres mag versturen"
          },
          "iban": {
            "type": "string",
            "description": "Het IBAN van de verzorger in het geval dat deze verzorger de factuurrelatie is.",
            "example": "NL67ABNA5515439724"
          }
        },
        "required": [
          "achternaam",
          "geslacht",
          "relatie_tot_leerling",
          "wettelijk_vertegenwoordiger"
        ]
      },
      "AanmeldingSchoolVanHerkomstNederland": {
        "type": "object",
        "description": "Gegevens van de school van herkomst indien de school in Nederland is",
        "properties": {
          "brincode": {
            "type": "string",
            "pattern": "^\\d{2}\\[AZ]{2}$",
            "description": "De BRIN code van de school van herkomst zoals opgenomen in het RIO van DUO",
            "example": "15CC"
          },
          "vestigingscode": {
            "type": "string",
            "pattern": "^\\d{2}$",
            "description": "De vestigingscode van de school van herkomst zoals opgenomen in het RIO van DUO. Indien niet bekend gebruik 00.",
            "example": "00"
          },
          "inschrijfdatum": {
            "type": "string",
            "format": "date",
            "description": "Datum van inschrijving op de school van herkomst",
            "example": "2012-02-08"
          }
        },
        "required": [
          "brincode",
          "vestigingscode"
        ]
      },
      "AanmeldingSchoolVanHerkomstBuitenland": {
        "type": "object",
        "description": "Gegevens van de school van herkomst indien de school in het buitenland is",
        "properties": {
          "naam": {
            "type": "string",
            "description": "De naam van de school",
            "example": "Het Kompas"
          },
          "plaats": {
            "type": "string",
            "description": "De plaats van de school",
            "example": "Willemstad"
          },
          "land": {
            "type": "string",
            "description": "GBA code van het land van de school",
            "example": "5107"
          },
          "inschrijfdatum": {
            "type": "string",
            "format": "date",
            "description": "Datum van inschrijving op de school van herkomst",
            "example": "2012-02-08"
          }
        },
        "required": [
          "naam",
          "plaats"
        ]
      },
      "AanmeldingSchoolVanHerkomstOnbekend": {
        "type": "object",
        "description": "Gegevens van de school van herkomst indien de school onbekend is",
        "properties": {
          "opmerkingen": {
            "type": "string",
            "description": "Opmerkingen waarom de school van herkomst niet bekend is",
            "example": "School van herkomst niet te bepalen vanwege onbekende omstandigheden"
          }
        },
        "required": [
          "opmerkingen"
        ]
      },
      "AanmeldingAdvies": {
        "type": "object",
        "description": "Gegevens over het advies wat de school heeft gegegeven en de wensen van de ouders",
        "properties": {
          "advies_school": {
            "type": "string",
            "description": "Het advies gegeven aan de leerling door de school voor het vervolgonderwijs. Zie https://www.rijksoverheid.nl/onderwerpen/schooladvies-en-eindtoets-basisschool/vraag-en-antwoord/adviezen-in-groep-8 voor de lijst met mogelijke waardes.\n",
            "example": "vmbo gt-tl/havo"
          },
          "wens_ouders": {
            "type": "string",
            "description": "De wens van de ouders voor het vervolgonderwijs. Zie https://www.rijksoverheid.nl/onderwerpen/schooladvies-en-eindtoets-basisschool/vraag-en-antwoord/adviezen-in-groep-8 voor de lijst met mogelijke waardes.\n",
            "example": "havo"
          }
        }
      },
      "AanmeldingPlaatsing": {
        "type": "object",
        "description": "Gegevens over de gewenste plaatsing van de leerling",
        "properties": {
          "opleiding": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier van de vestigingsopleiding. Dit UUID kan met de vestigingsopleidingservice opgehaald worden.\n",
            "example": "e7f4564e-216a-4536-b6c9-2125b60e1daf"
          },
          "leerjaar": {
            "type": "integer",
            "description": "Het leerjaar waarin de leerling geplaatst wenst te worden. Cijfer van 1 t/m 6.",
            "example": 1
          },
          "schooljaar": {
            "type": "string",
            "pattern": "^\\d{4}\\/\\d{4}$",
            "description": "het gewenste schooljaar voor de plaatsing",
            "example": "2024/2025"
          }
        },
        "required": [
          "opleiding",
          "leerjaar"
        ]
      },
      "AanmeldingVrijVeld": {
        "type": "object",
        "description": "Ingevuld vrij veld om mee te sturen met de aanmelding",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier van het vrije veld."
          },
          "aangekruist": {
            "type": "boolean",
            "description": "Alleen van toepassing bij een aankruisvak"
          },
          "waarde": {
            "type": "string",
            "description": "Ingevulde waarde voor het veld. Niet van toepassing bij aankruisvak. Maximaal 1024 characters als het type lange tekst is, 100 characters als het type vrije tekst is."
          }
        },
        "required": [
          "uuid"
        ]
      },
      "AanmeldingToestemming": {
        "type": "object",
        "description": "Ingevuld toestemming veld om mee te sturen met de aanmelding",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unieke identifier van het toestemming veld."
          },
          "aangekruist": {
            "type": "boolean"
          }
        },
        "required": [
          "uuid",
          "aangekruist"
        ]
      },
      "AanmeldingBijlage": {
        "type": "object",
        "description": "Bijlage voor bij de aanmelding",
        "properties": {
          "bestandsnaam": {
            "type": "string",
            "description": "Omschrijvende naam van het bestand. Maximaal 255 tekens."
          },
          "bestandstype": {
            "type": "string",
            "description": "Type bestand, bijvoorbeeld PNG of PDF"
          },
          "bestand": {
            "type": "string",
            "format": "byte",
            "description": "base64-encoded string van de bestandsinhoud."
          }
        },
        "required": [
          "bestandsnaam",
          "bestand"
        ]
      },
      "AanmeldingOndertekening": {
        "type": "object",
        "description": "Ondertekening van de aanmelding",
        "properties": {
          "naam": {
            "type": "string",
            "description": "Naam van de ondertekenaar",
            "example": "G.J. Wobbelbroeck"
          },
          "datum": {
            "type": "string",
            "format": "date",
            "description": "Datum van ondertekening",
            "example": "2023-03-21"
          }
        },
        "required": [
          "naam",
          "datum"
        ]
      },
      "GeneralResponse": {
        "type": "object",
        "description": "Algemeen Response object voor wanneer we geen payload van een specifiek type hebben.",
        "properties": {
          "errors": {
            "description": "Lijst van opgetreden fouten. Indien er geen fouten waren is de lijst leeg of null.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Foutmelding",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Numerieke foutcode"
          },
          "problem": {
            "type": "string",
            "description": "Foutomschrijving"
          },
          "clarification": {
            "type": "string",
            "description": "Verdere toelichting van de fout (indien van toepassing)"
          }
        }
      }
    }
  },
  "paths": {
    "/connect/instelling": {
      "get": {
        "description": "Een request naar dit endpoint geeft altijd één Instelling terug, namelijk de Instelling die hoort bij de school waarvoor de client een OAuth token heeft opgevraagd.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstellingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstellingResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "brin",
            "in": "query",
            "description": "Optioneel filter op brin nummer (brin4 direct op instelling of brin6 voor vestiging)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "naam",
            "in": "query",
            "description": "Optioneel filter op naam van vestiging onder instellingen of instelling zelf.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Een call naar dit endpoint geeft alle Vestigingen terug van de Instelling waarvoor de client een token heeft aangevraagd en waar de client permissies voor heeft.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VestigingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VestigingResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUID van de op te halen vestiging. Als deze parameter niet wordt meegegeven worden alle Vestigingen teruggegeven waar de client recht op heeft.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle leerlingen terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK - response bevat gevraagde page met leerlingen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Leerlingen.\nAls deze parameter weggelaten wordt worden alle Leerlingen teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de leerlingUUID pad parameter wanneer meerdere specifieke Leerlingen opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke Leerlingen er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.\nDe waarde van de peilschooljaar parameter is ook bepalend voor welke Plaatsingen, Lesgroepen en Vakkeuzes met de Leerling meegegeven worden omdat die begin- en einddatums hebben of voor een beperkte tijd aan de Leerling te relateren zijn.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Leerling(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Leerlingen. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Leerlingen. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Vraag een Leerling met deze specifieke subject claim op. Als een subject gegeven wordt is de amount niet verplicht.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van de leerling terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist LeerlingUUID of vestigingUUID of geen recht op deze Leerling."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke vrije veldwaardes er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.\nAls deze parameter niet gevuld wordt, wordt alleen naar de status op de huidige datum gekeken.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Leerling terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke Leerlingen er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.\nDe waarde van de peilschooljaar parameter is ook bepalend voor welke Plaatsingen, Lesgroepen en Vakkeuzes met de Leerling meegegeven worden omdat die begin- en einddatums hebben of voor een beperkte tijd aan de Leerling te relateren zijn.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de leerling(en)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "description": "UUID van de Leerling",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/plaatsing": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle Plaatsingen terug voor Leerlingen waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK - response bevat gevraagde page met plaatsingen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaatsingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PlaatsingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Plaatsingen.\nAls deze parameter weggelaten wordt worden alle Plaatsingen teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de plaatsingUUID pad parameter wanneer meerdere specifieke Plaatsingen opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke Plaatsingen er worden teruggegeven omdat gekeken wordt naar wanneer de Plaatsingen actueel zijn.\nEen Plaatsing heeft een begin- en einddatum, welke worden vergeleken met het meegegeven Peilschooljaar. Als er geen Peilschooljaar is, worden altijd alleen Plaatsingen teruggegeven die op het moment van de aanroep actueel waren (nu valt tussen begin- en einddatum). Als Peilschooljaar HUIDIG is worden alle Plaatsingen teruggegeven die ergens dit schooljaar geldig waren. Als Peilschooljaar VOLGEND is worden alle Plaatsingen terug gegeven die gedurende het volgende schooljaar geldig zullen zijn.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Plaatsing(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Plaatsingen. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Plaatsingen. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/plaatsing/{plaatsingUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Plaatsing terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaatsingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PlaatsingResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke Plaatsingen er worden teruggegeven omdat gekeken wordt naar wanneer de Plaatsingen actueel zijn.\nEen Plaatsing heeft een begin- en einddatum, welke worden vergeleken met het meegegeven Peilschooljaar. Als er geen Peilschooljaar is, worden altijd alleen Plaatsingen teruggegeven die op het moment van de aanroep actueel waren (nu valt tussen begin- en einddatum). Als Peilschooljaar HUIDIG is worden alle Plaatsingen teruggegeven die ergens dit schooljaar geldig waren. Als Peilschooljaar VOLGEND is worden alle Plaatsingen terug gegeven die gedurende het volgende schooljaar geldig zullen zijn.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Plaatsing(en)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "plaatsingUUID",
            "in": "path",
            "description": "UUID van de Plaatsing",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/pasfoto": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de pasfoto van een Leerling mits de client ook rechten op de Leerling zelf heeft.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingPasfotoResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingPasfotoResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om pasfoto voor (deze) leerling op te halen"
          },
          "404": {
            "description": "NOT FOUND - Leerling bestaat niet of heeft geen pasfoto."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Leerling van wie de pasfoto is.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "description": "UUID van de Leerling van wie de pasfoto is.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/huiswerk": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft huiswerk vanaf de maandag twee weken geleden tot het eind van het schooljaar terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of het huiswerk op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist LeerlingUUID of vestigingUUID."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/voortgangsdossier": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft resultaten uit het voortgangdossier van de leerling van het huidige schooljaar terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoortgangsdossierResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VoortgangsdossierResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of het voortgangsdossier op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist VakUUID of LeerlingUUID of vestigingUUID."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "vak_uuid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "toekomstige_toetsen",
            "in": "query",
            "description": "Geeft aan of informatie van toekomstige toetsen moet worden meegestuurd. Hiervoor worden dan nog geen cijfers ingevuld.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/examendossier": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft resultaten uit het examendossier van de leerling van het huidige schooljaar terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExamendossierResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExamendossierResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of het examendossier op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist VakUUID of LeerlingUUID of vestigingUUID."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "vak_uuid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "toekomstige_toetsen",
            "in": "query",
            "description": "Geeft aan of informatie van toekomstige toetsen moet worden meegestuurd. Hiervoor worden dan nog geen cijfers ingevuld.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/rooster": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft het rooster van de leerling terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoosterResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RoosterResponse"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - ongeldig weeknummer."
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of het rooster op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist LeerlingUUID of vestigingUUID of geen recht op deze Leerling."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "weeknummer",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Optioneel weeknummer (default is de huidige week). Moet tussen 1 en 53 liggen en is de week van het kalenderjaar volgens ISO 8601."
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/huiswerk/{huiswerkuuid}/bijlagen": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Dit is een asynchroon request. Met dit request worden de bijlagen die bij het huiswerk horen verzameld in een zipbestand. Als het zipbestand klaar is wordt het in een multipart-request gepost naar de opgegeven callbackUrl.",
        "responses": {
          "200": {
            "description": "OK - De bijlagen worden verzameld en het resultaat zal naar de callbackUrl worden gestuurd."
          },
          "404": {
            "description": "NOT FOUND - Het huiswerk heeft geen bijlagen, er wordt geen zipbestand gemaakt en de callback wordt niet aangroepen."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "huiswerkuuid",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HuiswerkBijlagenCallback"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/HuiswerkBijlagenCallback"
              }
            }
          }
        },
        "callbacks": {
          "onFinished": {
            "{request.body#/callbackUrl}": {
              "post": {
                "parameters": [
                  {
                    "name": "X-Somtoday-Connect",
                    "in": "header",
                    "schema": {
                      "type": "string"
                    },
                    "required": true,
                    "description": "In deze header staat de Message authentication code (https://en.wikipedia.org/wiki/Message_authentication_code), dit is de versleutelde waarde van de state die in het request werd opgestuurd. De koppelpartij heeft een client-id en een client-secret gekregen van Somtoday. Met het client secret kan de state worden versleuteld. De versleutelde state die de koppelpartij heeft berekend moet hetzelfde zijn als de waarde in de header. Op deze manier wordt geverifieerd dat het request van Somtoday afkomstig is. Als de versleutelde state die de koppelpartij heeft berekend niet overeenkomt met de waarde van de header dan is het request waarschijnlijk niet van Somtoday afkomstig en moet het niet in behandeling worden genomen. De waarde in de header is hexadecimaal gecodeerd. Om de waarde uit de header te vergelijken met de versleutelde state ook hexadecimaal worden gecodeerd. Hieronder staan een aantal aanwijzingen waarmee de versleuteling met succes kan worden uitgevoerd.\nNodeJS https://nodejs.org/api/crypto.html#crypto_class_hmac Gebruik het algoritme 'SHA1' en encoding 'hex'.\nPHP https://www.php.net/manual/en/function.hash-hmac.php Gebruik het algoritme 'sha1' Let op gebruik binary = false\nJava https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/Mac.html https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/crypto/spec/SecretKeySpec.html Gebruik het algoritme 'HmacSHA1'"
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "$ref": "#/components/schemas/HuiswerkBijlagen"
                      },
                      "encoding": {
                        "bijlagen": {
                          "contentType": "application/zip"
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Laat de callback deze status code retourneren om aan te geven dat callback is geaccepteerd. Dit request wordt slechts één keer uitgevoerd, als er een fout code wordt teruggestuurd of er treedt een fout op bij de koppelpartij dan het request niet nog eens gedaan. Het bijlagen-request moet dan opnieuw worden gedaan door de koppelpartij."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/huiswerk/click": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Een klik op een link in het huiswerk.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging waar het Huiswerk is opgegeven.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HuiswerkKlik"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/HuiswerkKlik"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - Huiswerk klik is vastgelegd.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkKlik"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkKlik"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - fout in het meegestuurde HuiswerkKlik object."
          },
          "401": {
            "description": "UNAUTHORIZED - Client heeft geen toegang tot het Connect Koppelvlak."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van de leerling terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeerlingVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om leerlingen of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist LeerlingUUID of vestigingUUID of geen recht op deze Leerling."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke vrije veldwaardes er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.\nAls deze parameter niet gevuld wordt, wordt alleen naar de status op de huidige datum gekeken.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle leerling-accounts terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "De uuids van de leerlingen van de op te halen accounts.\nAls deze parameter weggelaten wordt worden alle Accounts teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke accounts er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Accounts.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak accounts aan voor leerlingen of wijzig bestaande accounts.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de leerlingen",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor welke leerlingen er accounts kunnen worden aangemaakt, omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen, er wordt dus geen account voor aangemaakt.\nVoor een Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen een account worden aangemaakt wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - De accounts zijn aangemaakt of gewijzigd als de accounts al bestonden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Geen Accounts aangemaakt, respose body bevat foutomschrijvingen.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          },
          "413": {
            "description": "PAYLOAD TOO LARGE - Er zijn meer dan 200 AccountInputs opgestuurd. Het request wordt niet verwerkt."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/leerling/{leerlingUUID}/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef het account van één specifieke Leerling terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bepalend voor het account van welke Leerlingen er worden teruggegeven omdat gekeken wordt naar wanneer de Leerlingen een actieve Plaatsing hebben.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen.\nEen Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen terugkomen wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.\nDe waarde van de peilschooljaar parameter is ook bepalend voor welke Plaatsingen, Lesgroepen en Vakkeuzes met de Leerling meegegeven worden omdat die begin- en einddatums hebben of voor een beperkte tijd aan de Leerling te relateren zijn.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de leerling(en)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "description": "UUID van de Leerling",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak een account aan voor een leerling, of wijzig het account van een leerling.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de leerling",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "leerlingUUID",
            "in": "path",
            "description": "UUID van de Leerling",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter bepaalt of er een account kan worden aangemaakt voor de leerling, omdat gekeken wordt naar wanneer de Leerling een actieve Plaatsing heeft.\nEen Leerling die vorig jaar van school gegaan is zal bij geen enkele waarde van de peilschooljaar parameter terugkomen, er wordt dus geen account voor aangemaakt.\nVoor een Leerling die volgend jaar voor het eerst een actieve Plaatsing heeft zal alleen een account worden aangemaakt wanneer de peilschooljaar parameter de waarde VOLGEND krijgt.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - Het account is aangemaakt of gewijzigd als het account al bestond.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Er is geen account aangemaakt omdat een of meer items onvolledig zijn.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle medewerkers terug waar de client rechten op heeft en die (een gedeelte van) het opgegeven peilschooljaar in dienst zijn.  In dienst betekent dat de datum in dienst voor het einde van het peilschooljaar ligt,  en de datum uit dienst na het begin van het peilschooljaar ligt, of leeg is. Indien geen peilschooljaar is opgegeven wordt voor beide datums de datum van vandaag gebruikt.\nDit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bij Medewerkers van belang omdat daarmee wordt aangegeven welke Lesgroepen er worden teruggegeven.\nAls bij een bepaalde waarde voor de peilschooljaar parameter een bepaalde Lesgroep wordt teruggegeven, dan wordt bij diezelfde waarde iedere Medewerker die docent is van die lesgroep teruggegeven.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Medewerkers.\nAls deze parameter weggelaten wordt worden alle Medewerkers teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de medewerkerUUID pad parameter wanneer meerdere specifieke Medewerkers opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Medewerker(s).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Medewerkers. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Medewerkers. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Vraag een Medewerker met deze specifieke subject claim op. Als een subject gegeven wordt is de amount niet verplicht.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van de medewerker terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om medewerkers of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist medewerkerUUID of vestigingUUID of geen recht op deze medewerker."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/{medewerkerUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Medewerker terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - Medewerker niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De peilschooljaar parameter is bij Medewerkers van belang omdat daarmee wordt aangegeven welke Lesgroepen er worden teruggegeven.\nAls bij een bepaalde waarde voor de peilschooljaar parameter een bepaalde Lesgroep wordt teruggegeven, dan wordt bij diezelfde waarde iedere Medewerker die docent is van die lesgroep teruggegeven.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerker(s).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "medewerkerUUID",
            "in": "path",
            "description": "UUID van de Medewerker.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/{medewerkerUUID}/pasfoto": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de pasfoto van een Medewerker mits de client ook rechten op de Medewerker zelf heeft.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerPasfotoResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerPasfotoResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - Medewerker of pasfoto niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Medewerker van wie de pasfoto is.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "medewerkerUUID",
            "in": "path",
            "description": "UUID van de Medewerker van wie de pasfoto is.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/{medewerkerUUID}/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van de medewerker terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MedewerkerVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om medewerkers of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist medewerkerUUID of vestigingUUID of geen recht op deze medewerker."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "medewerkerUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle medewerker-accounts terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "De uuids van de medewerkers van de op te halen accounts.\nAls deze parameter weggelaten wordt worden alle Accounts teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Accounts.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak accounts aan voor medewerkers of wijzig bestaande accounts.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerkers",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - De accounts zijn aangemaakt of gewijzigd als de accounts al bestonden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Er zijn geen accounts aangemaakt omdat een of meer items onvolledig zijn.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          },
          "413": {
            "description": "PAYLOAD TOO LARGE - Er zijn meer dan 200 AccountInputs opgestuurd. Het request wordt niet verwerkt."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/medewerker/{medewerkerUUID}/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef het account van één specifieke Medewerker terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND - De medewerker met de opgegeven UUID kan niet worden gevonden. Mogelijk heeft de client geen permissie voor deze medewerker."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerker(s)",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "medewerkerUUID",
            "in": "path",
            "description": "UUID van de Medewerker",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak een account aan voor de medewerker of wijzig het bestaande account.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerker",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "medewerkerUUID",
            "in": "path",
            "description": "UUID van de Medewerker",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - Het account is aangemaakt of gewijzigd als het account al bestond.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Er is geen account aangemaakt omdat een of meer items onvolledig zijn.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/vak": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle vakken die op de Vestiging worden aangeboden terug. Dit endpoint maakt gebruik van pagnination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VakResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VakResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "Gebruik deze parameter om te filteren op Vak UUIDs.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van het Vak of de Vakken.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Vakken. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Vakken. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/vak/{vakUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifiek Vak terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VakResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VakResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - Vak niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerker(s).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "vakUUID",
            "in": "path",
            "description": "UUID van het Vak.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/opleiding": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle Opleidingen die de Vestiging aabiedt terug. Dit endpoint maakt gebruik van pagnination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpleidingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OpleidingResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "Gebruik deze parameter om te filteren op Opleiding UUIDs.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Opleiding(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Opleidingen. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Opleidingen. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/opleiding/{opleidingUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Opleiding terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpleidingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OpleidingResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - Opleiding niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de medewerker(s).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "opleidingUUID",
            "in": "path",
            "description": "UUID van de Opleiding.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/lesgroep/": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle Lesgroepen terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LesgroepResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LesgroepResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Lesgroepen.\nAls deze parameter weggelaten wordt worden alle Lesgroepen teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de lesgroepUUID pad parameter wanneer meerdere specifieke Lesgroepen opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De werking van de peilschooljaar parameter is in het geval van Lesgroepen een beetje bijzonder omdat Lesgroepen zelf altijd al aan een specifiek schooljaar gekoppeld zijn.\nDaardoor verschilt de response nooit qua welke Lesgroepen er worden teruggegeven wanneer je de parameter weglaat of kiest voor HUIDIG, maar bijvoorbeeld de Leerlingen in de Lesgroep kunnen verschillen wanneer verwacht wordt dat er gedurende de rest van het schooljaar Leerlingen overstappen.\nNatuurlijk zijn Lesgroepen voor het volgende schooljaar onzichtbaar voor de client totdat de client als peilschooljaar parameter VOLGEND meegeeft.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Lesgroep(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Lesgroepen. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Lesgroepen. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "stamgroep",
            "in": "query",
            "description": "Wanneer deze parameter geset wordt, filteren we op lesgroepen die wel (true) of niet (false) aan een stamgroep gekoppeld zijn.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/lesgroep/{lesgroepUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Lesgroep terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LesgroepResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LesgroepResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De werking van de peilschooljaar parameter is in het geval van Lesgroepen een beetje bijzonder omdat Lesgroepen zelf altijd al aan een specifiek schooljaar gekoppeld zijn.\nDaardoor verschilt de response nooit qua welke Lesgroepen er worden teruggegeven wanneer je de parameter weglaat of kiest voor HUIDIG, maar bijvoorbeeld de Leerlingen in de Lesgroep kunnen verschillen wanneer verwacht wordt dat er gedurende de rest van het schooljaar Leerlingen overstappen.\nNatuurlijk zijn Lesgroepen voor het volgende schooljaar onzichtbaar voor de client totdat de client als peilschooljaar parameter VOLGEND meegeeft.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Lesgroep(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "lesgroepUUID",
            "in": "path",
            "description": "UUID van de Lesgroep.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/lesgroep/{lesgroepUUID}/rooster": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft het rooster van de Lesgroep terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoosterResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RoosterResponse"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - ongeldig weeknummer."
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om lesgroepen of het rooster op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist lesgroepUUID of vestigingUUID of geen recht op deze Lesgroep."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "lesgroepUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "weeknummer",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Optioneel weeknummer (default is de huidige week). Moet tussen 1 en 53 liggen en is de week van het kalenderjaar volgens ISO 8601."
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/stamgroep/": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle Stamgroepen terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StamgroepResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StamgroepResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Stamgroepen.\nAls deze parameter weggelaten wordt worden alle Stamgroepen teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de stamgroepUUID pad parameter wanneer meerdere specifieke Stamgroepen opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De werking van de peilschooljaar parameter is in het geval van Stamgroepen gelijk aan die van Lesgroepen.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Stamgroep(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Stamgroepen. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Stamgroepen. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/stamgroep/{stamgroepUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef één specifieke Stamgroep terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StamgroepResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StamgroepResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De werking van de peilschooljaar parameter is in het geval van Stamgroepen gelijk aan die van Lesgroepen.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Stamgroep(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "stamgroepUUID",
            "in": "path",
            "description": "UUID van de Stamgroep.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/lesgroep/{lesgroepUUID}/huiswerk": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft huiswerk van een specifieke lesgroep terug voor opgevraagde schooljaar.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HuiswerkResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - Lesgroep bestaat niet of ongeldig VestigingUUID meegegeven."
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "De werking van de peilschooljaar parameter is in het geval van Lesgroepen een beetje bijzonder omdat Lesgroepen zelf altijd al aan een specifiek schooljaar gekoppeld zijn.\nDaardoor verschilt de response nooit qua welke Lesgroepen er worden teruggegeven wanneer je de parameter weglaat of kiest voor HUIDIG, maar bijvoorbeeld de Leerlingen in de Lesgroep kunnen verschillen wanneer verwacht wordt dat er gedurende de rest van het schooljaar Leerlingen overstappen.\nNatuurlijk zijn Lesgroepen voor het volgende schooljaar onzichtbaar voor de client totdat de client als peilschooljaar parameter VOLGEND meegeeft.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de Lesgroep(en).",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "lesgroepUUID",
            "in": "path",
            "description": "UUID van de Lesgroep.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle OuderVerzorgers terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUIDs van de op te halen Lesgroepen.\nAls deze parameter weggelaten wordt worden alle Lesgroepen teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.\nHet gebruik van deze query parameter heeft de voorkeur boven de lesgroepUUID pad parameter wanneer meerdere specifieke Lesgroepen opgehaald moeten worden.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Houd er rekening mee dat een OuderVerzorger alleen opgevraagd kan worden als ten minste één van de bijbehorende Leerlingen opgevraagd kan worden.\nMet andere woorden is het verstandig om, bij het ophalen van de OuderVerzorgers van bepaalde Leerlingen, dezelfde peilschooljaar parameter mee te geven als bij het ophalen van die Leerlingen.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de OuderVerzorgers.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen OuderVerzorgers. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen OuderVerzorgers. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Vraag een OuderVerzorger met deze specifieke subject claim op. Als een subject gegeven wordt is de amount niet verplicht.",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van ouders/verzorgers terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om ouder/verzorger of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist ouderVerzorgerUUID of vestigingUUID of geen recht op deze ouderVerzorger."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/{ouderVerzorgerUUID}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft een specifieke OuderVerzorger terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - OuderVerzorger niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Houd er rekening mee dat een OuderVerzorger alleen opgevraagd kan worden als ten minste één van de bijbehorende Leerlingen opgevraagd kan worden.\nMet andere woorden is het verstandig om, bij het ophalen van de OuderVerzorgers van bepaalde Leerlingen, dezelfde peilschooljaar parameter mee te geven als bij het ophalen van die Leerlingen.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de OuderVerzorgers.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "ouderVerzorgerUUID",
            "in": "path",
            "description": "UUIDs van de op te halen OuderVerzorger.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/{ouderVerzorgerUUID}/veldwaardes": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft de vrije veldwaardes van de ouder/verzorger terug",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerVeldWaardesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OuderVerzorgerVeldWaardesResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen geldig token."
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om ouder/verzorger of hun vrije velden op te halen."
          },
          "404": {
            "description": "NOT FOUND - Onjuist ouderVerzorgerUUID of vestigingUUID of geen recht op deze ouderVerzorger."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "ouderVerzorgerUUID",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "vrijveldUUID",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "categorie",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "vrijveldNaam",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft alle accounts van ouders/verzorgers terug waar de client bij mag. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "De uuids van de ouders/verzorgers van de op te halen accounts.\nAls deze parameter weggelaten wordt worden alle Accounts teruggegeven waar de client recht op heeft en die voldoen aan eventuele overige query parameters.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": false
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Houd er rekening mee dat een OuderVerzorger account alleen opgevraagd kan worden als ten minste één van de bijbehorende Leerlingen opgevraagd kan worden.\nMet andere woorden is het verstandig om, bij het ophalen van de OuderVerzorger accounts van een bepaalde Leerlingen, dezelfde peilschooljaar parameter mee te geven als bij het ophalen van die Leerlingen.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging van de Ouderverzorgers.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen Accounts. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak accounts aan voor ouders/verzorgers of wijzig bestaande accounts.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de ouders/verzorgers",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Houd er rekening mee dat het account van een ouder/verzorger alleen opgevraagd kan worden als ten minste één van de bijbehorende Leerlingen opgevraagd kan worden.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - De accounts zijn aangemaakt of gewijzigd als de accounts al bestonden.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Er zijn geen accounts aangemaakt omdat een of meer items onvolledig zijn.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          },
          "413": {
            "description": "PAYLOAD TOO LARGE - Er zijn meer dan 200 AccountInputs opgestuurd. Het request wordt niet verwerkt."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/ouderVerzorger/{ouderVerzorgerUUID}/account": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geef het account van één specifieke ouder/verzorger terug.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Geen toegang tot Vestiging of toegang verloopt voor begin van peilschooljaar."
          },
          "404": {
            "description": "NOT FOUND - OuderVerzorger of Account niet gevonden."
          }
        },
        "parameters": [
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Er kunnen alleen accounts worden opgehaald voor ouders/verzorgers die binnen het meegegeven peilschooljaar een leerling op school hebben zitten.\nAls er geen peilschooljaar wordt meegegeven wordt alleen gekeken naar ouders/verzorgers die vandaag een leerling op school hebben zitten.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          },
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de ouder/verzorger",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "ouderVerzorgerUUID",
            "in": "path",
            "description": "UUID van de ouder/verzorger",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "veldpermissies",
            "in": "query",
            "description": "Geeft aan of de veldpermissies van de koppelpartij voor deze call moeten worden meegestuurd.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ]
      },
      "put": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Maak een account aan voor een ouder/verzorger, of wijzig het account van een ouder/verzorger.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging van de ouder/verzorger",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "ouderVerzorgerUUID",
            "in": "path",
            "description": "UUID van de ouder/verzorger",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "peilschooljaar",
            "in": "query",
            "description": "Er kunnen alleen accounts worden aangemaakt of aangepast voor ouders/verzorgers die binnen het meegegeven peilschooljaar een leerling op school hebben zitten.\nAls er geen peilschooljaar wordt meegegeven wordt alleen gekeken naar ouders/verzorgers die vandaag een leerling op school hebben zitten.",
            "schema": {
              "type": "string",
              "enum": [
                "HUIDIG",
                "VOLGEND"
              ]
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - Het account is aangemaakt of gewijzigd als het account al bestond.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - Er is geen account aangemaakt omdat een of meer items onvolledig zijn.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAccountInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - De koppelpartij heeft geen permissie om accounts aan te maken."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/resultaat/{resultaatId}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Vraag de status van een LeerlingResultaat op",
        "description": "",
        "operationId": "getLeerlingResultaat",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "resultaatId",
            "in": "path",
            "description": "UUID van het op te vragen LeerlingResultaat",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaatStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaatStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/resultaat": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Maak een nieuw summatief LeerlingResultaat aan voor een toetsafname.",
        "description": "",
        "operationId": "postLeerlingResultaat",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RLeerlingResultaat"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RLeerlingResultaat"
              }
            }
          },
          "description": "Het aan te maken leerlingresultaat",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaat"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RLeerlingResultaat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/formatief": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Maak een nieuw FormatiefLeerlingResultaat aan voor een toetsafname.",
        "description": "",
        "operationId": "postFormatiefLeerlingResultaat",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
              }
            }
          },
          "description": "Het aan te maken leerlingresultaat",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RFormatiefLeerlingResultaat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/toets": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Maak een nieuwe toets aan",
        "description": "",
        "operationId": "postToets",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RToets"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RToets"
              }
            }
          },
          "description": "De aan te maken toetsdata",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/toets/{id}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Vraag een specifieke beschikbare toets op",
        "description": "",
        "operationId": "getToets",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "De unieke identifier van de toets",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RToets"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/toetsafname": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Maak een nieuwe toetsafname aan",
        "description": "",
        "operationId": "postToetsAfname",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RToetsAfname"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RToetsAfname"
              }
            }
          },
          "description": "De aan te maken toetsafname",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RToetsAfname"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RToetsAfname"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RToetsAfname"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RToetsAfname"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/resultaat/toetsafname/{id}": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "summary": "Vraag een specifieke beschikbare toetsafname op, niet updatebaar",
        "description": "",
        "operationId": "getToetsAfname",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "De unieke identifier van de toetsafname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RToetsAfname"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/events": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft een lijst van UUIDs van gewijzigde/verwijderde entiteiten terug zodat koppelpartners niet regelmatig alle data hoeven op te vragen. Dit endpoint maakt gebruik van pagination.",
        "responses": {
          "200": {
            "description": "Aanroep geslaagd, zie response body voor event objecten.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging waar de events betrekking op hebben",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "index",
            "in": "query",
            "description": "Index van de laatst opgehaalde event. Het Events endpoint gaat alle events na die event teruggeven.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Voor pagination van op te halen events. Default 0, verhoog voor verdere calls met amount",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Voor pagination van op te halen events. Maximaal 200.",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "required": true
          },
          {
            "name": "categorie",
            "in": "query",
            "description": "Over wat voor entiteit de opgevraagde events moeten gaan (bijvoorbeeld Leerling, Lesgroep, Medewerker)",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/velden/aanmelding": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft een lijst van ingebruik zijnde velden voor deze vestiging die gebruikt kunnen worden tijdens het aanmelden van een nieuwe leerling.",
        "responses": {
          "200": {
            "description": "Aanroep geslaagd, zie response body voor vrije veld objecten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AanmeldVeldResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AanmeldVeldResponse"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om aanmeld velden op te halen."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging waar de velden betrekking op hebben.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/velden/toestemming": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Geeft een lijst van ingebruik zijnde toestemmingen voor deze vestiging die gebruikt kunnen worden tijdens het aanmelden van een nieuwe leerling",
        "responses": {
          "200": {
            "description": "Aanroep geslaagd, zie response body voor toestemming veld objecten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToestemmingVeldResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ToestemmingVeldResponse"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om toestemming velden op te halen."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging waar de velden betrekking op hebben.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/velden": {
      "get": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Endpoint voor het ophalen van alle actieve vrije velden (de vrije velden catalogus) voor de opgegeven vestiging.",
        "responses": {
          "200": {
            "description": "Aanroep geslaagd, zie response body voor vrije veld catalogus objecten.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VeldResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VeldResponse"
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - Geen recht om vrije velden catalogus op te halen."
          }
        },
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de vestiging waar de velden betrekking op hebben.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "categorie",
            "in": "query",
            "description": "Categorieën voor typen vrije velden.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "naam",
            "in": "query",
            "description": "Naam van het vrije veld.",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/connect/vestiging/{vestigingUUID}/aanmelding/{aanmeldingUUID}/bijlage": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Versturen van een nieuwe bijlage bij een bestaande aanmelding voor deze vestiging",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging waar de aanmelding voor gedaan wordt.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "aanmeldingUUID",
            "in": "path",
            "description": "UUID van de Aanmelding waar de bijlage aan gekoppeld moet worden.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AanmeldingBijlage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AanmeldingBijlage"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NO CONTENT - Bijlage opgeslagen bij de aanmelding"
          },
          "400": {
            "description": "BAD REQUEST - fout in het meegestuurde Bijlage object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Client heeft geen toegang tot het Connect Koppelvlak."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/aanmelding": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Versturen van een nieuwe leerling aanmelding voor deze vestiging",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging waar de aanmelding voor gedaan wordt.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Aanmelding"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Aanmelding"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED - Aanmelding ontvangen.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AanmeldingReferentie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AanmeldingReferentie"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST - fout in het meegestuurde Aanmelding object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Client heeft geen toegang tot het Connect Koppelvlak."
          }
        }
      }
    },
    "/connect/vestiging/{vestigingUUID}/aanmelding/{aanmeldingUUID}/ondertekening": {
      "post": {
        "security": [
          {
            "somtoday-authenticator-nightly": []
          },
          {
            "somtoday-authenticator-acceptatie": []
          },
          {
            "somtoday-authenticator-test": []
          },
          {
            "somtoday-authenticator-productie": []
          }
        ],
        "description": "Ondertekenen van de aanmelding. Hierna komt de aanmelding in aanmerking voor verdere verwerking.",
        "parameters": [
          {
            "name": "vestigingUUID",
            "in": "path",
            "description": "UUID van de Vestiging waar de aanmelding voor gedaan is",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "aanmeldingUUID",
            "in": "path",
            "description": "UUID van de Aanmelding die ondertekend moet worden.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AanmeldingOndertekening"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AanmeldingOndertekening"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NO CONTENT - Aanmelding is ondertekend en wordt aangeboden aan de instelling"
          },
          "400": {
            "description": "BAD REQUEST - fout in het meegestuurde Onderteking object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - Client heeft geen toegang tot het Connect Koppelvlak."
          }
        }
      }
    }
  }
}